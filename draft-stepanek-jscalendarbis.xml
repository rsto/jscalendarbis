<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc [
<!ENTITY nbsp "&#160;">
<!ENTITY zwsp "&#8203;">
<!ENTITY nbhy "&#8209;">
<!ENTITY wj "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt"?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc compact="yes"?>
<?rfc subcompact="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc iprnotified="no"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" category="std" consensus="true" docName="draft-stepanek-jscalendarbis-0" obsoletes="8984" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" symRefs="true" sortRefs="true" version="3">
  <front>
    <title abbrev="JSCalendar">JSCalendar: A JSON Representation of Calendar Data</title>
    <seriesInfo name="Internet-Draft" value="draft-stepanek-jscalendarbis-0"/>
    <author initials="N." surname="Jenkins" fullname="Neil Jenkins">
      <organization showOnFrontPage="true">Fastmail</organization>
      <address>
        <postal>
          <street>P.O. Box 234</street>
          <extaddr>Collins St. West</extaddr>
          <city>Melbourne</city>
          <code>VIC 8007</code>
          <country>Australia</country>
          <region/>
        </postal>
        <phone/>
        <email>neilj@fastmailteam.com</email>
        <uri>https://www.fastmail.com</uri>
      </address>
    </author>
    <author initials="R." surname="Stepanek" fullname="Robert Stepanek">
      <organization showOnFrontPage="true">Fastmail</organization>
      <address>
        <postal>
          <street>P.O. Box 234</street>
          <extaddr>Collins St. West</extaddr>
          <city>Melbourne</city>
          <code>VIC 8007</code>
          <country>Australia</country>
          <region/>
        </postal>
        <email>rsto@fastmailteam.com</email>
        <uri>https://www.fastmail.com</uri>
      </address>
    </author>
    <date month="07" year="2021"/>
    <area>Applications</area>
    <workgroup>Calendaring extensions</workgroup>
    <keyword>JSON</keyword>
    <keyword>iCalendar</keyword>
    <keyword>calendar</keyword>
    <keyword>events</keyword>
    <keyword>date</keyword>
    <keyword>time</keyword>
    <abstract>
      <t>This specification defines a data model and JSON representation of calendar data that can be used for storage and data exchange in a calendaring and scheduling environment. It aims to be an alternative and, over time, successor to the widely deployed iCalendar data format. It also aims to be unambiguous, extendable, and simple to process. In contrast to the jCal format, which is also based on JSON, JSCalendar is not a direct mapping from iCalendar but defines the data model independently and expands semantics where appropriate.</t>
    </abstract>
    <note removeInRFC="true">
      <t>This document is based on the contents of RFC 8984. Until this document is finished, significant changes will be preceded with the verbatim text <strong>BIS:</strong> to help dentify where this document and RFC 8984 differ. Insignificant changes, such as formatting, grammar or typos will not be marked.</t>
    </note>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>This document defines a data model for calendar event and task objects, or groups of such objects, in electronic calendar applications and systems. The format aims to be unambiguous, extendable, and simple to process.</t>
      <t>The key design considerations for this data model are as follows:</t>
      <ul>
        <li>The attributes of the calendar entry represented must be described as simple key-value pairs. Simple events are simple to represent; complex events can be modeled accurately.</li>
        <li>Wherever possible, there should be only one way to express the desired semantics, reducing complexity.</li>
        <li>The data model should avoid ambiguities, which often lead to interoperability issues between implementations.</li>
        <li>The data model should be generally compatible with the iCalendar data format <xref target="RFC5545"/> <xref target="RFC7986"/> and extensions, but the specification should add new attributes where the iCalendar format currently lacks expressivity, and drop seldom-used, obsolete, or redundant properties. This means translation with no loss of semantics should be easy with most common iCalendar files.</li>
        <li>Extensions, such as new properties and components, should not require updates to this document.</li>
      </ul>
      <t>The representation of this data model is defined in the Internet JSON (I-JSON) format <xref target="RFC7493"/>, which is a strict subset of the JSON data interchange format <xref target="RFC8259"/>. Using JSON is mostly a pragmatic choice: its widespread use makes JSCalendar easier to adopt and the ready availability of production-ready JSON implementations eliminates a whole category of parser-related interoperability issues, which iCalendar has often suffered from.</t>
      <section anchor="relation-to-icalendar">
        <name>Motivation and Relation to iCalendar and jCal</name>
        <t>The iCalendar data format <xref target="RFC5545"/>, a widely deployed interchange format for calendaring and scheduling data, has served calendaring vendors for a long time but contains some ambiguities and pitfalls that cannot be overcome without backward-incompatible changes.</t>
        <t>Sources of implementation errors include the following:</t>
        <ul>
          <li>iCalendar defines various formats for local times, UTC, and dates.</li>
          <li>iCalendar requires custom time zone definitions within a single calendar component.</li>
          <li>iCalendar's definition of recurrence rules is ambiguous and has resulted in differing interpretations, even between experienced calendar developers.</li>
          <li>The iCalendar format itself causes interoperability issues due to misuse of CRLF-terminated strings, line continuations, and subtle differences among iCalendar parsers.</li>
        </ul>
        <t>In recent years, many new products and services have appeared that wish to use a JSON representation of calendar data within their APIs. The JSON format for iCalendar data, <xref target="RFC7265">jCal</xref>, is a direct mapping between iCalendar and JSON. In its effort to represent full iCalendar semantics, it inherits all the same pitfalls and uses a complicated JSON structure.</t>
        <t>As a consequence, since the standardization of jCal, the majority of implementations and service providers either kept using iCalendar or came up with their own proprietary JSON representations, which are incompatible with each other and often suffer from common pitfalls, such as storing event start times in UTC (which become incorrect if the time zone's rules change in the future). JSCalendar meets the demand for JSON-formatted calendar data that is free of such known problems and provides a standard representation as an alternative to the proprietary formats.</t>
      </section>
      <section anchor="notational-conventions">
        <name>Notational Conventions</name>
        <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>", "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>
        <t>The underlying format used for this specification is JSON. Consequently, the terms "object" and "array" as well as the four primitive types (strings, numbers, booleans, and null) are to be interpreted as described in <xref target="RFC8259" section="1"/>.</t>
        <t>Some examples in this document contain "partial" JSON documents used for illustrative purposes. In these examples, an ellipsis "..." is used to indicate a portion of the document that has been removed for compactness.</t>
      </section>
      <section anchor="type-signatures">
        <name>Type Signatures</name>
        <t>Type signatures are given for all JSON values in this document. The following conventions are used:</t>
        <dl newline="false">
          <dt><tt>*</tt>:</dt>
          <dd>The type is undefined (the value could be any type, although permitted values may be constrained
	      by the context of this value).</dd>
          <dt><tt>String</tt>:</dt>
          <dd>This is the JSON string type.</dd>
          <dt><tt>Number</tt>:</dt>
          <dd>This is the JSON number type.</dd>
          <dt><tt>Boolean</tt>:</dt>
          <dd>This is the JSON boolean type.</dd>
          <dt><tt>A[B]</tt>:</dt>
          <dd>The keys are all of type <tt>A</tt> and the values are all of type
	      <tt>B</tt> for a JSON object.</dd>
          <dt><tt>A[]</tt>:</dt>
          <dd>There is an array of values of type <tt>A</tt></dd>
          <dt><tt>A|B</tt>:</dt>
          <dd>The value is either of type <tt>A</tt> or of type <tt>B</tt>.</dd>
        </dl>
        <t>Other types may also be given; their representations are defined elsewhere in this document.</t>
      </section>
      <section anchor="data-types">
        <name>Data Types</name>
        <t>In addition to the standard JSON data types, the following data types are used in this specification:</t>
        <section anchor="type-Id">
          <name>Id</name>
          <t>Where <tt>Id</tt> is given as a data type, it means a <tt>String</tt> of at least 1 and a maximum of 255 octets in size, and it <bcp14>MUST</bcp14> only contain characters from the "URL and Filename Safe" base64url alphabet, as defined in <xref target="RFC4648" section="5"/>, excluding the pad character (<tt>=</tt>). This means the allowed characters are the ASCII alphanumeric characters (<tt>A-Za-z0-9</tt>), hyphen (<tt>-</tt>), and underscore (<tt>_</tt>).</t>
          <t>In many places in JSCalendar, a JSON map is used where the map keys are of type Id and the map values are all the same type of object. This construction represents an unordered set of objects, with the added advantage that each entry has a name (the corresponding map key). This allows for more concise patching of objects, and, when applicable, for the objects in question to be referenced from other objects within the JSCalendar object.</t>
          <t>Unless otherwise specified for a particular property, there are no uniqueness constraints on an Id value (other than, of course, the requirement that you cannot have two values with the same key within a single JSON map). For example, two Event objects might use the same Ids in their respective <tt>links</tt> properties or, within the same Event object, the same Id could appear in the <tt>participants</tt> and <tt>alerts</tt> properties. These situations do not imply any semantic connections among the objects.</t>
        </section>
        <section anchor="type-Int">
          <name>Int</name>
          <t>Where <tt>Int</tt> is given as a data type, it means an integer in the range -2 <sup>53</sup> +1 &lt;= value &lt;= 2 <sup>53</sup> -1, the safe range for integers stored in a floating-point double, represented as a JSON <tt>Number</tt>.</t>
        </section>
        <section anchor="type-UnsignedInt">
          <name>UnsignedInt</name>
          <t>Where <tt>UnsignedInt</tt> is given as a data type, it means an integer in the range 0 &lt;= value &lt;= 2 <sup>53</sup> -1, represented as a JSON <tt>Number</tt>.</t>
        </section>
        <section anchor="type-UTCDateTime">
          <name>UTCDateTime</name>
          <t>This is a string in the <tt>date-time</tt> <xref target="RFC3339"/> format, with the further restrictions that any letters <bcp14>MUST</bcp14> be in uppercase, and the time offset <bcp14>MUST</bcp14> be the character <tt>Z</tt>. Fractional second values <bcp14>MUST NOT</bcp14> be included unless non-zero and <bcp14>MUST NOT</bcp14> have trailing zeros, to ensure there is only a single representation for each date-time.</t>
          <t>For example, <tt>2010-10-10T10:10:10.003Z</tt> is conformant, but <tt>2010-10-10T10:10:10.000Z</tt> is invalid and is correctly encoded as <tt>2010-10-10T10:10:10Z</tt>.</t>
        </section>
        <section anchor="type-LocalDateTime">
          <name>LocalDateTime</name>
          <t>This is a date-time string with no time zone/offset information. It is otherwise in the same format as UTCDateTime, including fractional seconds. For example, <tt>2006-01-02T15:04:05</tt> and <tt>2006-01-02T15:04:05.003</tt> are both valid. The time zone to associate with the LocalDateTime comes from the <tt>timeZone</tt> property of the JSCalendar object (see <xref target="prop-timeZone"/>). If no time zone is specified, the LocalDateTime is <tt>floating</tt>. Floating date-times are not tied to any specific time zone. Instead, they occur in each time zone at the given wall-clock time (as opposed to the same instant point in time).</t>
          <t>A time zone may have a period of discontinuity, for example, a change from standard time to daylight savings time. When converting local date-times that fall in the discontinuity to UTC, the offset before the transition <bcp14>MUST</bcp14> be used.</t>
          <t>For example, in the America/Los_Angeles time zone, the date-time 2020-11-01T01:30:00 occurs twice: before the daylight savings time (DST) transition with a UTC offset of -07:00 and again after the transition with an offset of -08:00. When converting to UTC, we therefore use the offset before the transition (-07:00), so it becomes 2020-11-01T08:30:00Z.</t>
          <t>Similarly, in the Australia/Melbourne time zone, the date-time 2020-10-04T02:30:00 does not exist; the clocks are moved forward one hour for DST on that day at 02:00. However, such a value may appear during calculations (see duration semantics in <xref target="type-Duration"/>) or due to a change in time zone rules (so it was valid when the event was first created). Again, it is interpreted as though the offset before the transition is in effect (+10:00); therefore, when converted to UTC, we get 2020-10-03T16:30:00Z.</t>
        </section>
        <section anchor="type-Duration">
          <name>Duration</name>
          <t>Where Duration is given as a type, it means a length of time represented by a subset of the ISO 8601 duration format, as specified by the following ABNF <xref target="RFC5234"/> :</t>
          <sourcecode name="" type="abnf">
    dur-secfrac = "." 1*DIGIT
    dur-second  = 1*DIGIT [dur-secfrac] "S"
    dur-minute  = 1*DIGIT "M" [dur-second]
    dur-hour    = 1*DIGIT "H" [dur-minute]
    dur-time    = "T" (dur-hour / dur-minute / dur-second)
    dur-day     = 1*DIGIT "D"
    dur-week    = 1*DIGIT "W"
    dur-cal     = (dur-week [dur-day] / dur-day)

    duration    = "P" (dur-cal [dur-time] / dur-time)
</sourcecode>
          <t>In addition, the duration <bcp14>MUST NOT</bcp14> include fractional second values unless the fraction is non-zero. Fractional second values <bcp14>MUST NOT</bcp14> have trailing zeros to ensure there is only a single representation for each duration.</t>
          <t>A duration specifies an abstract number of weeks, days, hours, minutes, and/or seconds. A duration specified using weeks or days does not always correspond to an exact multiple of 24 hours. The number of hours/minutes/seconds may vary if it overlaps a period of discontinuity in the event's time zone, for example, a change from standard time to daylight savings time. Leap seconds <bcp14>MUST NOT</bcp14> be considered when adding or subtracting a duration to/from a LocalDateTime.</t>
          <t>To add a duration to a LocalDateTime:</t>
          <ol>
            <li>Add any week or day components of the duration to the date. A week is always the same as seven days.</li>
            <li>If a time zone applies to the LocalDateTime, convert it to a UTCDateTime following the semantics in <xref target="type-LocalDateTime"/>.</li>
            <li>Add any hour, minute, or second components of the duration (in absolute time).</li>
            <li>Convert the resulting UTCDateTime back to a LocalDateTime in the time zone that applies.</li>
          </ol>
          <t>To subtract a duration from a LocalDateTime, the steps apply in reverse:</t>
          <ol>
            <li>If a time zone applies to the LocalDateTime, convert it to UTC following the semantics in <xref target="type-LocalDateTime"/>.</li>
            <li>Subtract any hour, minute, or second components of the duration (in absolute time).</li>
            <li>Convert the resulting UTCDateTime back to LocalDateTime in the time zone that applies.</li>
            <li>Subtract any week or day components of the duration from the date.</li>
            <li>If the resulting time does not exist on the date due to a discontinuity in the time zone, use the semantics in <xref target="type-LocalDateTime"/> to convert to UTC and back to get a valid LocalDateTime.</li>
          </ol>
          <t>These semantics match the iCalendar DURATION value type ( <xref target="RFC5545" sectionFormat="comma" section="3.3.6"/>).</t>
        </section>
        <section anchor="type-SignedDuration">
          <name>SignedDuration</name>
          <t>A SignedDuration represents a length of time that may be positive or negative and is typically used to express the offset of a point in time relative to an associated time. It is represented as a Duration, optionally preceded by a sign character. It is specified by the following ABNF:</t>
          <sourcecode name="" type="abnf">
signed-duration = ["+" / "-"] duration
</sourcecode>
          <t>A negative sign indicates a point in time at or before the associated time; a positive or no sign indicates a time at or after the associated time.</t>
        </section>
        <section anchor="type-timeZoneId">
          <name>TimeZoneId</name>
          <t>Where <tt>TimeZoneId</tt> is given as a data type, it means a <tt>String</tt> that is either a time zone name in the IANA Time Zone Database <xref target="TZDB"/> or a custom time zone identifier defined in the <tt>timeZones</tt> property (see <xref target="prop-timeZones"/>).</t>
          <t>Where an IANA time zone is specified, the zone rules of the respective zone records apply. Custom time zones are interpreted as described in <xref target="prop-timeZones"/>.</t>
        </section>
        <section anchor="type-PatchObject">
          <name>PatchObject</name>
          <t>A PatchObject is of type <tt>String[*]</tt> and represents an unordered set of patches on a JSON object. Each key is a path represented in a subset of the JSON Pointer format <xref target="RFC6901"/>. The paths have an implicit leading <tt>/</tt>, so each key is prefixed with <tt>/</tt> before applying the JSON Pointer evaluation algorithm.</t>
          <t>A patch within a PatchObject is only valid if all of the following conditions apply:</t>
          <ol>
            <li>The pointer <bcp14>MUST NOT</bcp14> reference inside an array (i.e., you <bcp14>MUST NOT</bcp14> insert/delete from an array; the array <bcp14>MUST</bcp14> be replaced in its entirety
		        instead).</li>
            <li>All parts prior to the last (i.e., the value after the final slash) <bcp14>MUST</bcp14> already
	        exist on the object being patched.</li>
            <li>There <bcp14>MUST NOT</bcp14> be two patches in the PatchObject where the pointer of one is the
	        prefix of the pointer of the other, e.g., <tt>alerts/1/offset</tt> and <tt>alerts</tt>.</li>
            <li>The value for the patch <bcp14>MUST</bcp14> be valid for the property being set (of the correct
	        type and obeying any other applicable restrictions), or, if null, the property <bcp14>MUST</bcp14> be
		    optional.</li>
          </ol>
          <t>The value associated with each pointer determines how to apply that patch:</t>
          <ul>
            <li>If null, remove the property from the patched object. If the key is not present in the parent, this a no-op.</li>
            <li>If non-null, set the value given as the value for this property
            (this may be a replacement or addition to the object being patched).</li>
          </ul>
          <t>A PatchObject does not define its own <tt>@type</tt> property (see <xref target="prop-type"/>). An <tt>@type</tt> property in a patch <bcp14>MUST</bcp14> be handled as any other patched property value.</t>
          <t>Implementations <bcp14>MUST</bcp14> reject a PatchObject in its entirety if any of its patches are invalid.  Implementations <bcp14>MUST NOT</bcp14> apply partial patches.</t>
          <t>The PatchObject format is used to significantly reduce file size and duplicated content when specifying variations to a common object, such as with recurring events or when translating the data into multiple languages. It can also better preserve semantic intent if only the properties that should differ between the two objects are patched. For example, if one person is not going to a particular instance of a regularly scheduled event, in iCalendar, you would have to duplicate the entire event in the override. In JSCalendar, this is a small patch to show the difference. As only this property is patched, if the location of the event is changed, the occurrence will automatically still inherit this.</t>
        </section>
        <section anchor="type-Relation">
          <name>Relation</name>
          <t>A Relation object defines the relation to other objects, using a possibly empty set of relation types. The object that defines this relation is the linking object, while the other object is the linked object. A Relation object has the following properties:</t>
          <dl newline="true">
            <dt>@type: <tt>String</tt> (mandatory)</dt>
            <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be <tt>Relation</tt>.</dd>
            <dt>relation: <tt>String[Boolean]</tt> (optional, default: empty Object)</dt>
            <dd>
              <t>This describes how the linked object is related to the linking object. The relation is defined as a set of relation types. If empty, the relationship between the two objects is unspecified.</t>
              <t>Keys in the set <bcp14>MUST</bcp14> be one of the following values, specified in the property definition where the Relation object is used, a value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>):</t>
              <dl newline="false">
                <dt><tt>first</tt>:</dt>
                <dd>The linked object is the first in a series the linking object is part of.</dd>
                <dt><tt>next</tt>:</dt>
                <dd>The linked object is next in a series the linking object is part of.</dd>
                <dt><tt>child</tt>:</dt>
                <dd>The linked object is a subpart of the linking object.</dd>
                <dt><tt>parent</tt>:</dt>
                <dd>The linking object is a subpart of the linked object.</dd>
              </dl>
              <t>The value for each key in the map <bcp14>MUST</bcp14> be true.</t>
            </dd>
          </dl>
        </section>
        <section anchor="type-Link">
          <name>Link</name>
          <t>A Link object represents an external resource associated with the linking object. It has the following properties:</t>
          <dl newline="true">
            <dt>@type: <tt>String</tt> (mandatory)</dt>
            <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be <tt>Link</tt>.</dd>
            <dt>href: <tt>String</tt> (mandatory)</dt>
            <dd>
              <t>This is a URI <xref target="RFC3986"/> from which the resource may be fetched.</t>
              <t>This <bcp14>MAY</bcp14> be a <tt>data:</tt> URL <xref target="RFC2397"/>, but it is recommended that the file be hosted on a server to avoid embedding arbitrarily large data in JSCalendar object instances.</t>
            </dd>
            <dt>cid: <tt>String</tt> (optional)
            </dt>
            <dd>
              <t>This <bcp14>MUST</bcp14> be a valid <tt>content-id</tt> value according to the definition of <xref target="RFC2392" section="2"/>. The value <bcp14>MUST</bcp14> be unique within this Link object but has no meaning beyond that. It <bcp14>MAY</bcp14> be different from the link id for this Link object.</t>
            </dd>
            <dt>contentType: <tt>String</tt> (optional)</dt>
            <dd>This is the media type <xref target="RFC6838"/> of the resource, if
	            known.</dd>
            <dt>size: <tt>UnsignedInt</tt> (optional)</dt>
            <dd>This is the size, in octets, of the resource when fully decoded (i.e., the number of octets
	            in the
		          file the user would download), if known. Note that this is an informational estimate, and
			        implementations must be prepared to handle the actual size being quite different when the
				      resource is fetched.</dd>
            <dt>rel: <tt>String</tt> (optional)</dt>
            <dd>This identifies the relation of the linked resource to the object. If set, the value
	            <bcp14>MUST</bcp14> be a relation type from the IANA "Link Relations" registry <xref target="LINKRELS"/>, as established in <xref target="RFC8288"/>.</dd>
            <dt>display: <tt>String</tt> (optional)</dt>
            <dd>
              <t>This describes the intended purpose of a link to an image. If set, the <tt>rel</tt> property <bcp14>MUST</bcp14> be set to <tt>icon</tt>. The value <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>):</t>
              <dl newline="false">
                <dt><tt>badge</tt>:</dt>
                <dd>an image meant to be displayed alongside the title of the object</dd>
                <dt><tt>graphic</tt>:</dt>
                <dd>a full image replacement for the object itself</dd>
                <dt><tt>fullsize</tt>:</dt>
                <dd>an image that is used to enhance the object</dd>
                <dt><tt>thumbnail</tt>:</dt>
                <dd>a smaller variant of <tt>fullsize</tt> to be used when space for the image is
		constrained</dd>
              </dl>
            </dd>
            <dt>title: <tt>String</tt> (optional)</dt>
            <dd>This is a human-readable, plain-text description of the resource.</dd>
          </dl>
        </section>
      </section>
    </section>
    <section anchor="jscalendar-objects">
      <name>JSCalendar Objects</name>
      <t>This section describes the calendar object types specified by JSCalendar.</t>
      <section anchor="jsevent">
        <name>Event</name>
        <t>Media type: <tt>application/jscalendar+json;type=event</tt></t>
        <t>An Event represents a scheduled amount of time on a calendar, typically a meeting, appointment, reminder, or anniversary. It is required to start at a certain point in time and typically has a non-zero duration. Multiple participants may partake in the event at multiple locations.</t>
        <t>The <xref target="prop-type">@type</xref> property value <bcp14>MUST</bcp14> be <tt>Event</tt>.</t>
      </section>
      <section anchor="jstask">
        <name>Task</name>
        <t>Media type: <tt>application/jscalendar+json;type=task</tt></t>
        <t>A Task represents an action item, assignment, to-do item, or work item. It may start and be due at certain points in time, take some estimated time to complete, and recur, none of which is required.</t>
        <t>The <xref target="prop-type">@type</xref> property value <bcp14>MUST</bcp14> be <tt>Task</tt>.</t>
      </section>
      <section anchor="jsgroup">
        <name>Group</name>
        <t>Media type: <tt>application/jscalendar+json;type=group</tt></t>
        <t>A Group is a collection of <xref target="jsevent">Event</xref> and/or <xref target="jstask">Task</xref> objects. Typically, objects are grouped by topic (e.g., by keywords) or calendar membership.</t>
        <t>The <xref target="prop-type">@type</xref> property value <bcp14>MUST</bcp14> be <tt>Group</tt>.</t>
      </section>
    </section>
    <section anchor="structure-of-jscalendar-objects">
      <name>Structure of JSCalendar Objects</name>
      <t>A JSCalendar object is a JSON object <xref target="RFC8259"/>, which <bcp14>MUST</bcp14> be valid I-JSON (a stricter subset of JSON) <xref target="RFC7493"/>. Property names and values are case sensitive.</t>
      <t>The object has a collection of properties, as specified in the following sections. Properties are specified as being either mandatory or optional. Optional properties may have a default value if explicitly specified in the property definition.</t>
      <section anchor="objecttype">
        <name>Object Type</name>
        <t>JSCalendar objects <bcp14>MUST</bcp14> name their type in the <tt>@type</tt> property if not explicitly specified otherwise for the respective object type. A notable exception to this rule is the <xref target="type-PatchObject">PatchObject</xref>.</t>
      </section>
      <section anchor="normalization">
        <name>Normalization and Equivalence</name>
        <t>JSCalendar aims to provide unambiguous definitions for value types and properties but does not define a general normalization or equivalence method for JSCalendar objects and types. This is because the notion of equivalence might range from byte-level equivalence to semantic equivalence, depending on the respective use case. Normalization of JSCalendar objects is hindered because of the following reasons:</t>
        <ul>
          <li>Custom JSCalendar properties may contain arbitrary JSON values, including arrays. However,
	    equivalence of arrays might or might not depend on the order of elements, depending on the respective
	      property definition.</li>
          <li>Several JSCalendar property values are defined as URIs and media types, but normalization of
	    these types is inherently protocol and scheme specific, depending on the use case of the equivalence
	      definition (see <xref target="RFC3986" section="6"/>).</li>
        </ul>
        <t>Considering this, the definition of equivalence and normalization is left to client and server implementations and to be negotiated by a calendar exchange protocol or defined elsewhere.</t>
      </section>
      <section anchor="custom-properties">
        <name>Vendor-Specific Property Extensions, Values, and Types</name>
        <t>Vendors <bcp14>MAY</bcp14> add additional properties to the calendar object to support their custom features. To avoid conflict, the names of these properties <bcp14>MUST</bcp14> be prefixed by a domain name controlled by the vendor followed by a colon, e.g., <tt>example.com:customprop</tt>. If the value is a new JSCalendar object, it either <bcp14>MUST</bcp14> include an <tt>@type</tt> property, or it <bcp14>MUST</bcp14> explicitly be specified to not require a type designator. The type name <bcp14>MUST</bcp14> be prefixed with a domain name controlled by the vendor.</t>
        <t>Some JSCalendar properties allow vendor-specific value extensions. Such vendor-specific values <bcp14>MUST</bcp14> be prefixed by a domain name controlled by the vendor followed by a colon, e.g., <tt>example.com:customrel</tt>.</t>
        <t>Vendors are strongly encouraged to register any new property values or extensions that are useful to other systems as well, rather than use a vendor-specific prefix.</t>
      </section>
    </section>
    <section anchor="jscalendar-props">
      <name>Common JSCalendar Properties</name>
      <t>This section describes the properties that are common to the various JSCalendar object types. Specific JSCalendar object types may only support a subset of these properties. The object type definitions in <xref target="jscalendar-object-props"/> describe the set of supported properties per type.</t>
      <section anchor="metadata-properties">
        <name>Metadata Properties</name>
        <section anchor="prop-type">
          <name>@type</name>
          <t>Type: <tt>String</tt> (mandatory)</t>
          <t>This specifies the type that this object represents. The allowed value differs by object type and is defined in Sections <xref target="jsevent" format="counter"/>, <xref target="jstask" format="counter"/>, and <xref target="jsgroup" format="counter"/>.</t>
        </section>
        <section anchor="prop-uid">
          <name>uid</name>
          <t>Type: <tt>String</tt> (mandatory)</t>
          <t>This is a globally unique identifier used to associate objects representing the same event, task, group, or other object across different systems, calendars, and views. For recurring events and tasks, the UID is associated with the base object and therefore is the same for all occurrences; the combination of the UID with a <tt>recurrenceId</tt> identifies a particular instance.</t>
          <t>The generator of the identifier <bcp14>MUST</bcp14> guarantee that the identifier is unique. <xref target="RFC4122"/> describes a range of established algorithms to generate universally unique identifiers (UUIDs). UUID version 4, described in <xref target="RFC4122" section="4.4"/>, is <bcp14>RECOMMENDED</bcp14>.</t>
          <t>For compatibility with  UIDs <xref target="RFC5545"/>, implementations <bcp14>MUST</bcp14> be able to receive and persist values of at least 255 octets for this property, but they <bcp14>MUST NOT</bcp14> truncate values in the middle of a UTF-8 multi-octet sequence.</t>
        </section>
        <section anchor="prop-relatedTo">
          <name>relatedTo</name>
          <t>Type: <tt>String[Relation]</tt> (optional)</t>
          <t>This relates the object to other JSCalendar objects. This is represented as a map of the UIDs of the related objects to information about the relation.</t>
          <t>If an object is split to make a "this and future" change to a recurrence, the original object <bcp14>MUST</bcp14> be truncated to end at the previous occurrence before this split, and a new object is created to represent all the occurrences after the split. A <tt>next</tt> relation <bcp14>MUST</bcp14> be set on the original object's <tt>relatedTo</tt> property for the UID of the new object. A <tt>first</tt> relation for the UID of the first object in the series <bcp14>MUST</bcp14> be set on the new object. Clients can then follow these UIDs to get the complete set of objects if the user wishes to modify them all at once.</t>
        </section>
        <section anchor="prop-prodId">
          <name>prodId</name>
          <t>Type: <tt>String</tt> (optional)</t>
          <t>This is the identifier for the product that last updated the JSCalendar object. This should be set whenever the data in the object is modified (i.e., whenever the <tt>updated</tt> property is set).</t>
          <t>The vendor of the implementation <bcp14>MUST</bcp14> ensure that this is a globally unique identifier, using some technique such as a Formal Public Identifier (FPI) value, as defined in <xref target="ISO.9070.1991"/>.</t>
          <t>This property <bcp14>SHOULD NOT</bcp14> be used to alter the interpretation of a JSCalendar object beyond the semantics specified in this document. For example, it is not to be used to further the understanding of nonstandard properties, a practice that is known to cause long-term interoperability problems.</t>
        </section>
        <section anchor="prop-created">
          <name>created</name>
          <t>Type: <tt>UTCDateTime</tt> (optional)</t>
          <t>This is the date and time this object was initially created.</t>
        </section>
        <section anchor="prop-updated">
          <name>updated</name>
          <t>Type: <tt>UTCDateTime</tt> (mandatory)</t>
          <t>This is the date and time the data in this object was last modified (or its creation date/time if not modified since).</t>
        </section>
        <section anchor="prop-sequence">
          <name>sequence</name>
          <t>Type: <tt>UnsignedInt</tt> (optional, default: 0)</t>
          <t>Initially zero, this <bcp14>MUST</bcp14> be incremented by one every time a change is made to the object, except if the change only modifies the <tt>participants</tt> property (see <xref target="prop-participants"/>).</t>
          <t>This is used as part of the iCalendar Transport-independent Interoperability Protocol (iTIP) <xref target="RFC5546"/> to know which version of the object a scheduling message relates to.</t>
        </section>
        <section anchor="prop-method">
          <name>method</name>
          <t>Type: <tt>String</tt> (optional)</t>
          <t>This is the iTIP <xref target="RFC5546"/> method, in lowercase. This <bcp14>MUST</bcp14> only be present if the JSCalendar object represents an iTIP scheduling message.</t>
        </section>
      </section>
      <section anchor="whatwhere-properties">
        <name>What and Where Properties</name>
        <section anchor="prop-title">
          <name>title</name>
          <t>Type: <tt>String</tt> (optional, default: empty String)</t>
          <t>This is a short summary of the object.</t>
        </section>
        <section anchor="prop-description">
          <name>description</name>
          <t>Type: <tt>String</tt> (optional, default: empty String)</t>
          <t>This is a longer-form text description of the object. The content is formatted according to the <tt>descriptionContentType</tt> property.</t>
        </section>
        <section anchor="prop-descriptionContentType">
          <name>descriptionContentType</name>
          <t>Type: <tt>String</tt> (optional, default: <tt>text/plain</tt>)</t>
          <t>This describes the media type <xref target="RFC6838"/> of the contents of the <tt>description</tt> property. Media types <bcp14>MUST</bcp14> be subtypes of type <tt>text</tt> and <bcp14>SHOULD</bcp14> be <tt>text/plain</tt> or <tt>text/html</tt> <xref target="MEDIATYPES"/>. They <bcp14>MAY</bcp14> include parameters, and the <tt>charset</tt> parameter value <bcp14>MUST</bcp14> be <tt>utf-8</tt>, if specified. Descriptions of type <tt>text/html</tt> <bcp14>MAY</bcp14> contain <tt>cid</tt> URLs <xref target="RFC2392"/> to reference links in the calendar object by use of the <tt>cid</tt> property of the Link object.</t>
        </section>
        <section anchor="prop-showWithoutTime">
          <name>showWithoutTime</name>
          <t>Type: <tt>Boolean</tt> (optional, default: false)</t>
          <t>This indicates that the time is not important to display to the user when rendering this calendar object. An example of this is an event that conceptually occurs all day or across multiple days, such as "New Year's Day" or "Italy Vacation". While the time component is important for free-busy calculations and checking for scheduling clashes, calendars may choose to omit displaying it and/or display the object separately to other objects to enhance the user's view of their schedule.</t>
          <t>Such events are also commonly known as "all-day" events.</t>
        </section>
        <section anchor="prop-locations">
          <name>locations</name>
          <t>Type: <tt>Id[Location]</tt> (optional)</t>
          <t>This is a map of location ids to Location objects, representing locations associated with the object.</t>
          <t>A Location object has the following properties. It <bcp14>MUST</bcp14> have at least one property other than the <tt>relativeTo</tt> property.</t>
          <dl newline="true">
            <dt>@type: <tt>String</tt> (mandatory)</dt>
            <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be <tt>Location</tt>.</dd>
            <dt>name: <tt>String</tt> (optional)</dt>
            <dd>This is the human-readable name of the location.</dd>
            <dt>description: <tt>String</tt> (optional)</dt>
            <dd>This is the human-readable, plain-text instructions for accessing this location. This may be
	            an address, set of directions, door access code, etc.</dd>
            <dt>locationTypes: <tt>String[Boolean]</tt> (optional)</dt>
            <dd>This is a set of one or more location types that describe this location. All types
	            <bcp14>MUST</bcp14> be from the "Location Types Registry" <xref target="LOCATIONTYPES"/>, as defined in <xref target="RFC4589"/>. The set is
		          represented as a map, with the keys being the location types. The value for each key in the map
			        <bcp14>MUST</bcp14> be true.</dd>
            <dt>relativeTo: <tt>String</tt> (optional)</dt>
            <dd>
              <t>This specifies the relation between this location and the time of the JSCalendar object. This is primarily to allow events representing travel to specify the location of departure (at the start of the event) and location of arrival (at the end); this is particularly important if these locations are in different time zones, as a client may wish to highlight this information for the user.</t>
              <t>This <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>). Any value the client or server doesn't understand should be treated the same as if this property is omitted.</t>
              <dl newline="false">
                <dt><tt>start</tt>:</dt>
                <dd>The event/task described by this JSCalendar object occurs at this location at the time the
		event/task starts.</dd>
                <dt><tt>end</tt>:</dt>
                <dd>The event/task described by this JSCalendar object occurs at this location at the time the
		event/task ends.</dd>
              </dl>
            </dd>
            <dt>timeZone: <tt>TimeZoneId</tt> (optional)</dt>
            <dd>This is a time zone for this location.</dd>
            <dt>coordinates: <tt>String</tt> (optional)</dt>
            <dd>This is a <tt>geo:</tt> URI <xref target="RFC5870"/> for the location.</dd>
            <dt>links: <tt>Id[Link]</tt> (optional)</dt>
            <dd>This is a map of link ids to Link objects, representing external resources associated with
	            this location, for example, a vCard or image. If there are no links, this
		          <bcp14>MUST</bcp14> be omitted (rather than specified as an empty set).</dd>
          </dl>
        </section>
        <section anchor="prop-virtualLocations">
          <name>virtualLocations</name>
          <t>Type: <tt>Id[VirtualLocation]</tt> (optional)</t>
          <t>This is a map of virtual location ids to VirtualLocation objects, representing virtual locations, such as video conferences or chat rooms, associated with the object.</t>
          <t>A VirtualLocation object has the following properties.</t>
          <dl newline="true">
            <dt>@type: <tt>String</tt> (mandatory)</dt>
            <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be
	            <tt>VirtualLocation</tt>.</dd>
            <dt>name: <tt>String</tt> (optional, default: empty String)</dt>
            <dd>This is the human-readable name of the virtual location.</dd>
            <dt>description: <tt>String</tt> (optional)</dt>
            <dd>These are human-readable plain-text instructions for accessing this virtual location. This
	            may be a conference access code, etc.</dd>
            <dt>uri: <tt>String</tt> (mandatory)</dt>
            <dd>
              <t>This is a URI <xref target="RFC3986"/> that represents how to connect to this virtual location.</t>
              <t>This may be a telephone number (represented using the <tt>tel:</tt> scheme, e.g., <tt>tel:+1-555-555-5555</tt>) for a teleconference, a web address for online chat, or any custom URI.</t>
            </dd>
            <dt>features: <tt>String[Boolean]</tt> (optional)</dt>
            <dd>
              <t>A set of features supported by this virtual location. The set is represented as a map, with the keys being the feature. The value for each key in the map <bcp14>MUST</bcp14> be true.</t>
              <t>The feature <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>). Any value the client or server doesn't understand should be treated the same as if this feature is omitted.</t>
              <dl newline="false">
                <dt>audio:</dt>
                <dd>Audio conferencing</dd>
                <dt>chat:</dt>
                <dd>Chat or instant messaging</dd>
                <dt>feed:</dt>
                <dd>Blog or atom feed</dd>
                <dt>moderator:</dt>
                <dd>Provides moderator-specific features</dd>
                <dt>phone:</dt>
                <dd>Phone conferencing</dd>
                <dt>screen:</dt>
                <dd>Screen sharing</dd>
                <dt>video:</dt>
                <dd>Video conferencing</dd>
              </dl>
            </dd>
          </dl>
        </section>
        <section anchor="prop-links">
          <name>links</name>
          <t>Type: <tt>Id[Link]</tt> (optional)</t>
          <t>This is a map of link ids to Link objects, representing external resources associated with the object.</t>
          <t>Links with a rel of <tt>enclosure</tt> <bcp14>MUST</bcp14> be considered by the client to be attachments for download.</t>
          <t>Links with a rel of <tt>describedby</tt> <bcp14>MUST</bcp14> be considered by the client to be alternative representations of the description.</t>
          <t>Links with a rel of <tt>icon</tt> <bcp14>MUST</bcp14> be considered by the client to be images that it may use when presenting the calendar data to a user. The <tt>display</tt> property may be set to indicate the purpose of this image.</t>
        </section>
        <section anchor="prop-locale">
          <name>locale</name>
          <t>Type: <tt>String</tt> (optional)</t>
          <t>This is the language tag, as defined in <xref target="RFC5646"/>, that best describes the locale used for the text in the calendar object, if known.</t>
        </section>
        <section anchor="prop-keywords">
          <name>keywords</name>
          <t>Type: <tt>String[Boolean]</tt> (optional)</t>
          <t>This is a set of keywords or tags that relate to the object. The set is represented as a map, with the keys being the keywords. The value for each key in the map <bcp14>MUST</bcp14> be true.</t>
        </section>
        <section anchor="prop-categories">
          <name>categories</name>
          <t>Type: <tt>String[Boolean]</tt> (optional)</t>
          <t>This is a set of categories that relate to the calendar object. The set is represented as a map, with the keys being the categories specified as URIs. The value for each key in the map <bcp14>MUST</bcp14> be true.</t>
          <t>In contrast to keywords, categories are typically structured. For example, a vendor owning the domain <tt>example.com</tt> might define the categories <tt>http://example.com/categories/sports/american-football</tt> and <tt>http://example.com/categories/music/r-b</tt>.</t>
        </section>
        <section anchor="prop-color">
          <name>color</name>
          <t>Type: <tt>String</tt> (optional)</t>
          <t>This is a color clients <bcp14>MAY</bcp14> use when displaying this calendar object. The value is a color name taken from the set of names defined in Section 4.3 of CSS Color Module Level 3 <xref target="COLORS"/> or an RGB value in hexadecimal notation, as defined in Section 4.2.1 of CSS Color Module Level 3.</t>
        </section>
      </section>
      <section anchor="recurrence-props">
        <name>Recurrence Properties</name>
        <t>Some events and tasks occur at regular or irregular intervals. Rather than having to copy the data for every occurrence, there can be a base event with rules to generate recurrences and/or overrides that add extra dates or exceptions to the rules.</t>
        <t>The recurrence set is the complete set of instances for an object. It is generated by considering the following properties in order, all of which are optional:</t>
        <ol>
          <li>The <tt>recurrenceRules</tt> property (<xref target="prop-recurrenceRules"/>) generates a set of extra date-times on which the object occurs.</li>
          <li>The <tt>excludedRecurrenceRules</tt> property (<xref target="prop-excludedRecurrenceRules"/>) generates a set of date-times that are to be removed from the previously
	    generated set of date-times on which the object occurs.</li>
          <li>The <tt>recurrenceOverrides</tt> property (<xref target="prop-recurrenceOverrides"/>)
	    defines date-times that are added or excluded to form the final set. (This property may also contain
	      changes to the object to apply to particular instances.)</li>
        </ol>
        <section anchor="prop-recurrenceId">
          <name>recurrenceId</name>
          <t>Type: <tt>LocalDateTime</tt> (optional)</t>
          <t>If present, this JSCalendar object represents one occurrence of a recurring JSCalendar object. If present, the <tt>recurrenceRules</tt> and <tt>recurrenceOverrides</tt> properties <bcp14>MUST NOT</bcp14> be present.</t>
          <t>The value is a date-time either produced by the <tt>recurrenceRules</tt> of the base event or added as a key to the <tt>recurrenceOverrides</tt> property of the base event.</t>
        </section>
        <section anchor="prop-recurrenceIdTimeZone">
          <name>recurrenceIdTimeZone</name>
          <t>Type: <tt>TimeZoneId|null</tt> (optional, default: null)</t>
          <t>Identifies the time zone of the main JSCalendar object, of which this JSCalendar object is a recurrence instance. It <bcp14>MUST NOT</bcp14> be set if the <tt>recurrenceId</tt> property is not set.</t>
        </section>
        <section anchor="prop-recurrenceRules">
          <name>recurrenceRules</name>
          <t>Type: <tt>RecurrenceRule[]</tt> (optional)</t>
          <t>This defines a set of recurrence rules (repeating patterns) for recurring calendar objects.</t>
          <t>An Event recurs by applying the recurrence rules to the <tt>start</tt> date-time.</t>
          <t>A Task recurs by applying the recurrence rules to the <tt>start</tt> date-time, if defined; otherwise, it recurs by the <tt>due</tt> date-time, if defined. If the task defines neither a <tt>start</tt> nor <tt>due</tt> date-time, it <bcp14>MUST NOT</bcp14> define a <tt>recurrenceRules</tt> property.</t>
          <t>If multiple recurrence rules are given, each rule is to be applied, and then the union of the results are used, ignoring any duplicates.</t>
          <t>A RecurrenceRule object is a JSON object mapping of a RECUR value type in iCalendar <xref target="RFC5545"/> <xref target="RFC7529"/> and has the same semantics. It has the following properties:</t>
          <dl newline="true">
            <dt>@type: <tt>String</tt> (mandatory)</dt>
            <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be
	            <tt>RecurrenceRule</tt>.</dd>
            <dt>frequency: <tt>String</tt> (mandatory)</dt>
            <dd>
              <t>This is the time span covered by each iteration of this recurrence rule (see <xref target="recurrence-semantics"/> for full semantics). This <bcp14>MUST</bcp14> be one of the following values:</t>
              <ul>
                <li>
                  <tt>yearly</tt>
                </li>
                <li>
                  <tt>monthly</tt>
                </li>
                <li>
                  <tt>weekly</tt>
                </li>
                <li>
                  <tt>daily</tt>
                </li>
                <li>
                  <tt>hourly</tt>
                </li>
                <li>
                  <tt>minutely</tt>
                </li>
                <li>
                  <tt>secondly</tt>
                </li>
              </ul>
              <t>This is the FREQ part from iCalendar, converted to lowercase.</t>
            </dd>
            <dt>interval: <tt>UnsignedInt</tt> (optional, default: 1)</dt>
            <dd>
              <t>This is the interval of iteration periods at which the recurrence repeats. If included, it <bcp14>MUST</bcp14> be an integer &gt;= 1.</t>
              <t>This is the INTERVAL part from iCalendar.</t>
            </dd>
            <dt>rscale: <tt>String</tt> (optional, default: "gregorian")</dt>
            <dd>
              <t>This is the calendar system in which this recurrence rule operates, in lowercase. This <bcp14>MUST</bcp14> be either a CLDR-registered calendar system name <xref target="CLDR"/> or a vendor-specific value (see <xref target="custom-properties"/>).</t>
              <t>This is the RSCALE part from iCalendar <xref target="RFC7529">RSCALE</xref>, converted to lowercase.</t>
            </dd>
            <dt>skip: <tt>String</tt> (optional, default: "omit")</dt>
            <dd>
              <t>This is the behavior to use when the expansion of the recurrence produces invalid dates. This property only has an effect if the frequency is "yearly" or "monthly". It <bcp14>MUST</bcp14> be one of the following values:</t>
              <ul>
                <li>
                  <tt>omit</tt>
                </li>
                <li>
                  <tt>backward</tt>
                </li>
                <li>
                  <tt>forward</tt>
                </li>
              </ul>
              <t>This is the SKIP part from iCalendar <xref target="RFC7529">RSCALE</xref>, converted to lowercase.</t>
            </dd>
            <dt>firstDayOfWeek: <tt>String</tt> (optional, default: "mo")</dt>
            <dd>
              <t>This is the day on which the week is considered to start, represented as a lowercase, abbreviated, and two-letter English day of the week. If included, it <bcp14>MUST</bcp14> be one of the following values:</t>
              <ul>
                <li>
                  <tt>mo</tt>
                </li>
                <li>
                  <tt>tu</tt>
                </li>
                <li>
                  <tt>we</tt>
                </li>
                <li>
                  <tt>th</tt>
                </li>
                <li>
                  <tt>fr</tt>
                </li>
                <li>
                  <tt>sa</tt>
                </li>
                <li>
                  <tt>su</tt>
                </li>
              </ul>
              <t>This is the WKST part from iCalendar.</t>
            </dd>
            <dt>byDay: <tt>NDay[]</tt> (optional)</dt>
            <dd>
              <t>These are days of the week on which to repeat. An <tt>NDay</tt> object has the following properties:</t>
              <dl newline="true">
                <dt>@type: <tt>String</tt> (mandatory)</dt>
                <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be <tt>NDay</tt>.</dd>
                <dt>day: <tt>String</tt> (mandatory)</dt>
                <dd>
                  <t>This is a day of the week on which to repeat; the allowed values are the same as for the <tt>firstDayOfWeek</tt> recurrenceRule property.</t>
                  <t>This is the day of the week of the BYDAY part in iCalendar, converted to lowercase.</t>
                </dd>
                <dt>nthOfPeriod: <tt>Int</tt> (optional)</dt>
                <dd>
                  <t>If present, rather than representing every occurrence of the weekday defined in the <tt>day</tt> property, it represents only a specific instance within the recurrence period. The value can be positive or negative but <bcp14>MUST NOT</bcp14> be zero. A negative integer means the nth-last occurrence within that period (i.e., -1 is the last occurrence, -2 the one before that, etc.).</t>
                  <t>This is the ordinal part of the BYDAY value in iCalendar (e.g., 1 or -3).</t>
                </dd>
              </dl>
            </dd>
            <dt>byMonthDay: <tt>Int[]</tt> (optional)
            </dt>
            <dd>
              <t>These are the days of the month on which to repeat. Valid values are between 1 and the maximum number of days any month may have in the calendar given by the <tt>rscale</tt> property and the negative values of these numbers. For example, in the Gregorian calendar, valid values are 1 to 31 and -31 to -1. Negative values offset from the end of the month. The array <bcp14>MUST</bcp14> have at least one entry if included.</t>
              <t>This is the BYMONTHDAY part in iCalendar.</t>
            </dd>
            <dt>byMonth: <tt>String[]</tt> (optional)</dt>
            <dd>
              <t>These are the months in which to repeat. Each entry is a string representation of a number, starting from "1" for the first month in the calendar (e.g., "1" means January with the Gregorian calendar), with an optional "L" suffix (see <xref target="RFC7529"/>) for leap months (this <bcp14>MUST</bcp14> be uppercase, e.g., "3L"). The array <bcp14>MUST</bcp14> have at least one entry if included.</t>
              <t>This is the BYMONTH part from iCalendar.</t>
            </dd>
            <dt>byYearDay: <tt>Int[]</tt> (optional)</dt>
            <dd>
              <t>These are the days of the year on which to repeat. Valid values are between 1 and the maximum number of days any year may have in the calendar given by the <tt>rscale</tt> property and the negative values of these numbers. For example, in the Gregorian calendar, valid values are 1 to 366 and -366 to -1. Negative values offset from the end of the year. The array <bcp14>MUST</bcp14> have at least one entry if included.</t>
              <t>This is the BYYEARDAY part from iCalendar.</t>
            </dd>
            <dt>byWeekNo: <tt>Int[]</tt> (optional)</dt>
            <dd>
              <t>These are the weeks of the year in which to repeat. Valid values are between 1 and the maximum number of weeks any year may have in the calendar given by the <tt>rscale</tt> property and the negative values of these numbers. For example, in the Gregorian calendar, valid values are 1 to 53 and -53 to -1. The array <bcp14>MUST</bcp14> have at least one entry if included.</t>
              <t>This is the BYWEEKNO part from iCalendar.</t>
            </dd>
            <dt>byHour: <tt>UnsignedInt[]</tt> (optional)</dt>
            <dd>
              <t>These are the hours of the day in which to repeat. Valid values are 0 to 23. The array <bcp14>MUST</bcp14> have at least one entry if included. This is the BYHOUR part from iCalendar.</t>
            </dd>
            <dt>byMinute: <tt>UnsignedInt[]</tt> (optional)
            </dt>
            <dd>
              <t>These are the minutes of the hour in which to repeat. Valid values are 0 to 59. The array <bcp14>MUST</bcp14> have at least one entry if included.</t>
              <t>This is the BYMINUTE part from iCalendar.</t>
            </dd>
            <dt>bySecond: <tt>UnsignedInt[]</tt> (optional)</dt>
            <dd>
              <t>These are the seconds of the minute in which to repeat. Valid values are 0 to 60. The array <bcp14>MUST</bcp14> have at least one entry if included.</t>
              <t>This is the BYSECOND part from iCalendar.</t>
            </dd>
            <dt>bySetPosition: <tt>Int[]</tt> (optional)</dt>
            <dd>These are the occurrences within the recurrence interval to include in the final results.
	            Negative values offset from the end of the list of occurrences. The array <bcp14>MUST</bcp14>
		          have at least one entry if included. This is the BYSETPOS part from iCalendar.</dd>
            <dt>count: <tt>UnsignedInt</tt> (optional)</dt>
            <dd>
              <t>These are the number of occurrences at which to range-bound the recurrence. This <bcp14>MUST NOT</bcp14> be included if an <tt>until</tt> property is specified.</t>
              <t>This is the COUNT part from iCalendar.</t>
            </dd>
            <dt>until: <tt>LocalDateTime</tt> (optional)</dt>
            <dd>
              <t>These are the date-time at which to finish recurring. The last occurrence is on or before this date-time. This <bcp14>MUST NOT</bcp14> be included if a <tt>count</tt> property is specified. Note that if not specified otherwise for a specific JSCalendar object, this date is to be interpreted in the time zone specified in the JSCalendar object's <tt>timeZone</tt> property.</t>
              <t>This is the UNTIL part from iCalendar.</t>
            </dd>
          </dl>
          <section anchor="recurrence-semantics" toc="exclude">
            <name>Interpreting Recurrence Rules</name>
            <t>A recurrence rule specifies a set of date-times for recurring calendar objects. A recurrence rule has the following semantics. Note that wherever "year", "month", or "day of month" is used, this is within the calendar system given by the <tt>rscale</tt> property, which defaults to "gregorian" if omitted.</t>
            <ol>
              <li>
                <t>A set of candidates is generated. This is every second within a period defined by the <tt>frequency</tt> property value:</t>
                <dl newline="false">
                  <dt><tt>yearly</tt>:</dt>
                  <dd>
                    <t>every second from midnight on the first day of a year (inclusive) to midnight the first day of the following year (exclusive).</t>
                    <t>If skip is not "omit", the calendar system has leap months, and there is a <tt>byMonth</tt> property, generate candidates for the leap months, even if they don't occur in this year.</t>
                    <t>If skip is not "omit" and there is a <tt>byMonthDay</tt> property, presume each month has the maximum number of days any month may have in this calendar system when generating candidates, even if it's more than this month actually has.</t>
                  </dd>
                  <dt><tt>monthly</tt>:</dt>
                  <dd>
                    <t>every second from midnight on the first day of a month (inclusive) to midnight on the first of the following month (exclusive).</t>
                    <t>If skip is not "omit" and there is a <tt>byMonthDay</tt> property, presume the month has the maximum number of days any month may have in this calendar system when generating candidates, even if it's more than this month actually has.</t>
                  </dd>
                  <dt><tt>weekly</tt>:</dt>
                  <dd>every second from midnight (inclusive) on the first day of the week (as defined by the <tt>firstDayOfWeek</tt> property or Monday if omitted) to midnight seven days later (exclusive).</dd>
                  <dt><tt>daily</tt>:</dt>
                  <dd>every second from midnight at the start of the day (inclusive) to midnight at the end of the day (exclusive).</dd>
                  <dt><tt>hourly</tt>:</dt>
                  <dd> every second from the beginning of the hour (inclusive) to the beginning of the next hour (exclusive).</dd>
                  <dt><tt>minutely</tt>:</dt>
                  <dd> every second from the beginning of the minute (inclusive) to the beginning of the next minute (exclusive).</dd>
                  <dt><tt>secondly</tt>:</dt>
                  <dd>only the second itself.</dd>
                </dl>
              </li>
              <li>
                <t>Each date-time candidate is compared against all of the byX properties of the rule except bySetPosition. If any property in the rule does not match the date-time, the date-time is eliminated. Each byX property is an array; the date-time matches the property if it matches any of the values in the array. The properties have the following semantics:</t>
                <dl newline="false">
                  <dt>byMonth:</dt>
                  <dd>The date-time is in the given month.</dd>
                  <dt>byWeekNo:</dt>
                  <dd>
                    <t>The date-time is in the nth week of the year. Negative numbers mean the nth last week of the year. This corresponds to weeks according to week numbering, as defined in ISO.8601.2004, with a week defined as a seven-day period, starting on the <tt>firstDayOfWeek</tt> property value or Monday if omitted. Week number one of the calendar year is the first week that contains at least four days in that calendar year.</t>
                    <t>If the date-time is not valid (this may happen when generating candidates with a <tt>skip</tt> property in effect), it is always eliminated by this property.</t>
                  </dd>
                  <dt>byYearDay:</dt>
                  <dd>
                    <t>The date-time is on the nth day of year. Negative numbers mean the nth last day of the year.</t>
                    <t>If the date-time is not valid (this may happen when generating candidates with a <tt>skip</tt> property in effect), it is always eliminated by this property.</t>
                  </dd>
                  <dt>byMonthDay:</dt>
                  <dd>The date-time is on the given day of the month. Negative numbers mean the nth last day of
		      the month.</dd>
                  <dt>byDay:</dt>
                  <dd>The date-time is on the given day of the week. If the day is prefixed by a number, it is the nth occurrence of that day of the week within the month (if frequency is monthly) or year (if frequency is yearly). Negative numbers mean the nth last occurrence within that period.</dd>
                  <dt>byHour:</dt>
                  <dd>The date-time has the given hour value.</dd>
                  <dt>byMinute:</dt>
                  <dd>The date-time has the given minute value.</dd>
                  <dt>bySecond:</dt>
                  <dd>The date-time has the given second value.</dd>
                </dl>
                <t>If a <tt>skip</tt> property is defined and is not "omit", there may be candidates that do not correspond to valid dates (e.g., February 31st in the Gregorian calendar). In this case, the properties <bcp14>MUST</bcp14> be considered in the order above, and:</t>
                <ol>
                  <li>After applying the byMonth filter, if the candidate's month is invalid for the given year, increment it (if skip is "forward") or decrement it (if skip is "backward") until a valid month is found, incrementing/decrementing the year as well if passing through the beginning/end of the year. This only applies to calendar systems with leap months.</li>
                  <li>After applying the byMonthDay filter, if the day of the month is invalid for the given month and year, change the date to the first day of the next month (if skip is "forward") or the last day of the current month (if skip is "backward").</li>
                  <li>If any valid date produced after applying the skip is already a candidate, eliminate the duplicate. (For example, after adjusting, February 30th and February 31st would both become the same "real" date, so one is eliminated as a duplicate.)</li>
                </ol>
              </li>
              <li>If a <tt>bySetPosition</tt> property is included, this is now applied to the ordered list of remaining dates. This property specifies the indexes of date-times to keep; all others should be eliminated. Negative numbers are indexed from the end of the list, with -1 being the last item, -2 the second from last, etc.</li>
              <li>Any date-times before the start date of the event are eliminated (see below for why this might be needed).</li>
              <li>If a <tt>skip</tt> property is included and is not "omit", eliminate any date-times that have already been produced by previous iterations of the algorithm. (This is not possible if skip is "omit".)</li>
              <li>If further dates are required (we have not reached the until date or count limit), skip the next (interval - 1) sets of candidates, then continue from step 1.</li>
            </ol>
            <t>When determining the set of occurrence dates for an event or task, the following extra rules must be applied:</t>
            <ol>
              <li>The initial date-time to which the rule is applied (the <tt>start</tt> date-time for events
		          or the <tt>start</tt> or <tt>due</tt> date-time for tasks) is always the first occurrence in the
			        expansion (and is counted if the recurrence is limited by a <tt>count</tt> property), even if it would
				      normally not match the rule.</li>
              <li>The first set of candidates to consider is that which would contain the initial date-time.


	            This means the first set may include candidates before the initial date-time; such candidates are
		          eliminated from the results in step 4 of the list above.</li>
              <li>
                <t>The following properties <bcp14>MUST</bcp14> be implicitly added to the rule under the given conditions:</t>
                <ul>
                  <li>If frequency is not <tt>secondly</tt> and there is no <tt>bySecond</tt> property, add a <tt>bySecond</tt>
		    property with the sole value being the seconds value of the initial date-time.</li>
                  <li>If frequency is not <tt>secondly</tt> or <tt>minutely</tt> and there is no <tt>byMinute</tt>
		    property, add a <tt>byMinute</tt> property with the sole value being the minutes value of the initial
		      date-time.</li>
                  <li>If frequency is not <tt>secondly</tt>, <tt>minutely</tt>, or <tt>hourly</tt> and there is
		    no <tt>byHour</tt> property, add a <tt>byHour</tt> property with the sole value being the hours value of the
		      initial date-time.</li>
                  <li>If frequency is <tt>weekly</tt> and there is no <tt>byDay</tt> property, add a <tt>byDay</tt> property with
		    the sole value being the day of the week of the initial date-time.</li>
                  <li>If frequency is <tt>monthly</tt> and there is no <tt>byDay</tt> property and no <tt>byMonthDay</tt>
		    property, add a <tt>byMonthDay</tt> property with the sole value being the day of the month of the
		      initial date-time.</li>
                  <li>
                    <t>If frequency is <tt>yearly</tt> and there is no <tt>byYearDay</tt> property:</t>
                    <ul>
                      <li>If there are no <tt>byMonth</tt> or <tt>byWeekNo</tt> properties, and either there is a <tt>byMonthDay</tt> property or there is no <tt>byDay</tt> property, add a <tt>byMonth</tt> property with the sole value being the month of the initial date-time.</li>
                      <li>If there are no <tt>byMonthDay</tt>, <tt>byWeekNo</tt>, or <tt>byDay</tt> properties, add a <tt>byMonthDay</tt> property with the sole value being the day of the month of the initial date-time.</li>
                      <li>If there is a <tt>byWeekNo</tt> property and no <tt>byMonthDay</tt> or <tt>byDay</tt> properties, add a <tt>byDay</tt> property with the sole value being the day of the week of the initial date-time.</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ol>
          </section>
        </section>
        <section anchor="prop-excludedRecurrenceRules">
          <name>excludedRecurrenceRules</name>
          <t>Type: <tt>RecurrenceRule[]</tt> (optional)</t>
          <t>This defines a set of recurrence rules (repeating patterns) for date-times on which the object will not occur. The rules are interpreted the same as for the <tt>recurrenceRules</tt> property (see <xref target="prop-recurrenceRules"/>), with the exception that the initial date-time to which the rule is applied (the "start" date-time for events or the "start" or "due" date-time for tasks) is only considered part of the expansion if it matches the rule. The resulting set of date-times is then removed from those generated by the <tt>recurrenceRules</tt> property, as described in <xref target="recurrence-props"/>.</t>
        </section>
        <section anchor="prop-recurrenceOverrides">
          <name>recurrenceOverrides</name>
          <t>Type: <tt>LocalDateTime[PatchObject]</tt> (optional)</t>
          <t>Maps recurrence ids (the date-time produced by the recurrence rule) to the overridden properties of the recurrence instance.</t>
          <t>If the recurrence id does not match a date-time from the recurrence rule (or no rule is specified), it is to be treated as an additional occurrence (like an RDATE from iCalendar). The patch object may often be empty in this case.</t>
          <t>If the patch object defines the <tt>excluded</tt> property of an occurrence to be true, this occurrence is omitted from the final set of recurrences for the calendar object (like an EXDATE from iCalendar). Such a patch object <bcp14>MUST NOT</bcp14> patch any other property.</t>
          <t>By default, an occurrence inherits all properties from the main object except the start (or due) date-time, which is shifted to match the recurrence id LocalDateTime. However, individual properties of the occurrence can be modified by a patch or multiple patches. It is valid to patch the <tt>start</tt> property value, and this patch takes precedence over the value generated from the recurrence id. Both the recurrence id as well as the patched <tt>start</tt> date-time may occur before the original JSCalendar object's <tt>start</tt> or <tt>due</tt> date.</t>
          <t>A pointer in the PatchObject <bcp14>MUST</bcp14> be ignored if it starts with one of the following prefixes:</t>
          <ul>
            <li>@type</li>
            <li>excludedRecurrenceRules</li>
            <li>method</li>
            <li>privacy</li>
            <li>prodId</li>
            <li>recurrenceId</li>
            <li>recurrenceIdTimeZone</li>
            <li>recurrenceOverrides</li>
            <li>recurrenceRules</li>
            <li>relatedTo</li>
            <li>replyTo</li>
            <li>sentBy</li>
            <li>timeZones</li>
            <li>uid</li>
          </ul>
        </section>
        <section anchor="prop-excluded">
          <name>excluded</name>
          <t>Type: <tt>Boolean</tt> (optional, default: false)</t>
          <t>This defines if this object is an overridden, excluded instance of a recurring JSCalendar object (see <xref target="prop-recurrenceOverrides"/>). If this property value is true, this calendar object instance <bcp14>MUST</bcp14> be removed from the occurrence expansion. The absence of this property, or the presence of its default value as false, indicates that this instance <bcp14>MUST</bcp14> be included in the occurrence expansion.</t>
        </section>
      </section>
      <section anchor="sharing-scheduling-properties">
        <name>Sharing and Scheduling Properties</name>
        <section anchor="prop-priority">
          <name>priority</name>
          <t>Type: <tt>Int</tt> (optional, default: 0)</t>
          <t>This specifies a priority for the calendar object. This may be used as part of scheduling systems to help resolve conflicts for a time period.</t>
          <t>The priority is specified as an integer in the range 0 to 9. A value of 0 specifies an undefined priority, for which the treatment will vary by situation. A value of 1 is the highest priority. A value of 2 is the second highest priority. Subsequent numbers specify a decreasing ordinal priority. A value of 9 is the lowest priority. Other integer values are reserved for future use.</t>
        </section>
        <section anchor="prop-freeBusyStatus">
          <name>freeBusyStatus</name>
          <t>Type: <tt>String</tt> (optional, default: <tt>busy</tt>)</t>
          <t>This specifies how this calendar object should be treated when calculating free-busy state. This <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>):</t>
          <dl newline="false">
            <dt><tt>free</tt>:</dt>
            <dd>The object should be ignored when calculating whether the user is busy.</dd>
            <dt><tt>busy</tt>:</dt>
            <dd>The object should be included when calculating whether the user is busy.</dd>
          </dl>
        </section>
        <section anchor="prop-privacy">
          <name>privacy</name>
          <t>Type: <tt>String</tt> (optional, default: <tt>public</tt>)</t>
          <t>Calendar objects are normally collected together and may be shared with other users. The privacy property allows the object owner to indicate that it should not be shared or should only have the time information shared but the details withheld. Enforcement of the restrictions indicated by this property is up to the API via which this object is accessed.</t>
          <t>This property <bcp14>MUST NOT</bcp14> affect the information sent to scheduled participants; it is only interpreted by protocols that share the calendar objects belonging to one user with other users.</t>
          <t>The value <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>). Any value the client or server doesn't understand should be preserved but treated as equivalent to <tt>private</tt>.</t>
          <dl newline="false">
            <dt><tt>public</tt>:</dt>
            <dd>The full details of the object are visible to those whom the object's calendar is shared
		    with.</dd>
            <dt><tt>private</tt>:</dt>
            <dd>
              <t>The details of the object are hidden; only the basic time and metadata are shared. The following properties <bcp14>MAY</bcp14> be shared; any other properties <bcp14>MUST NOT</bcp14> be shared:</t>
              <ul>
                <li>@type</li>
                <li>created</li>
                <li>due</li>
                <li>duration</li>
                <li>estimatedDuration</li>
                <li>excluded</li>
                <li>excludedRecurrenceRules</li>
                <li>freeBusyStatus</li>
                <li>privacy</li>
                <li>recurrenceId</li>
                <li>recurrenceIdTimeZone</li>
                <li>recurrenceOverrides (Only patches that apply to another permissible property are allowed to be shared.)</li>
                <li>recurrenceRules</li>
                <li>sequence</li>
                <li>showWithoutTime</li>
                <li>start</li>
                <li>timeZone</li>
                <li>timeZones</li>
                <li>uid</li>
                <li>updated</li>
              </ul>
            </dd>
            <dt><tt>secret</tt>:</dt>
            <dd>The object is hidden completely (as though it did not exist) when the calendar this object is
		    in is shared.</dd>
          </dl>
        </section>
        <section anchor="prop-replyTo">
          <name>replyTo</name>
          <t>Type: <tt>String[String]</tt> (optional)</t>
          <t>This represents methods by which participants may submit their response to the organizer of the calendar object. The keys in the property value are the available methods and <bcp14>MUST</bcp14> only contain ASCII alphanumeric characters (A-Za-z0-9). The value is a URI for the method specified in the key. Future methods may be defined in future specifications and registered with IANA; a calendar client <bcp14>MUST</bcp14> ignore any method it does not understand but <bcp14>MUST</bcp14> preserve the method key and URI. This property <bcp14>MUST</bcp14> be omitted if no method is defined (rather than being specified as an empty object).</t>
          <t>The following methods are defined:</t>
          <dl newline="false">
            <dt><tt>imip</tt>:</dt>
            <dd>The organizer accepts an iCalendar Message-Based Interoperability Protocol (iMIP) <xref target="RFC6047"/> response at this email address. The value <bcp14>MUST</bcp14>
            be a <tt>mailto:</tt> URI.</dd>
            <dt><tt>web</tt>:</dt>
            <dd> Opening this URI in a web browser will provide the user with a page where they can submit a
		    reply to the organizer. The value <bcp14>MUST</bcp14> be a URL using the <tt>https:</tt>
            scheme.</dd>
            <dt><tt>other</tt>:</dt>
            <dd> The organizer is identified by this URI, but the method for submitting the response is
		    undefined.</dd>
          </dl>
        </section>
        <section anchor="prop-sentBy">
          <name>sentBy</name>
          <t>Type: <tt>String</tt> (optional)</t>
          <t>This is the email address in the "From" header of the email in which this calendar object was received. This is only relevant if the calendar object is received via iMIP or as an attachment to a message.  If set, the value <bcp14>MUST</bcp14> be a valid <tt>addr-spec</tt> value as defined in Section 3.4.1 of <xref target="RFC5322"/>.</t>
        </section>
        <section anchor="prop-participants">
          <name>participants</name>
          <t>Type: <tt>Id[Participant]</tt> (optional)</t>
          <t>This is a map of participant ids to participants, describing their participation in the calendar object.</t>
          <t>If this property is set and any participant has a <tt>sendTo</tt> property, then the <tt>replyTo</tt> property of this calendar object <bcp14>MUST</bcp14> define at least one reply method.</t>
          <t>A Participant object has the following properties:</t>
          <dl newline="true">
            <dt>@type: <tt>String</tt> (mandatory)</dt>
            <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be <tt>Participant</tt>.</dd>
            <dt>name: <tt>String</tt> (optional)</dt>
            <dd>This is the display name of the participant (e.g., "Joe Bloggs").</dd>
            <dt>email: <tt>String</tt> (optional)</dt>
            <dd>This is the email address to use to contact the participant or, for example, match with an address book entry. If set, the value <bcp14>MUST</bcp14> be a valid <tt>addr-spec</tt> value as defined in Section 3.4.1 of <xref target="RFC5322"/>.</dd>
            <dt>description: <tt>String</tt> (optional)</dt>
            <dd>This is a plain-text description of this participant. For example, this may include more
	             information about their role in the event or how best to contact them.</dd>
            <dt>sendTo: <tt>String[String]</tt> (optional)</dt>
            <dd>
              <t>This represents methods by which the participant may receive the invitation and updates to the calendar object.</t>
              <t>The keys in the property value are the available methods and <bcp14>MUST</bcp14> only contain ASCII alphanumeric characters (A-Za-z0-9). The value is a URI for the method specified in the key. Future methods may be defined in future specifications and registered with IANA; a calendar client <bcp14>MUST</bcp14> ignore any method it does not understand but <bcp14>MUST</bcp14> preserve the method key and URI. This property <bcp14>MUST</bcp14> be omitted if no method is defined (rather than being specified as an empty object).</t>
              <t>The following methods are defined:</t>
              <dl newline="false">
                <dt><tt>imip</tt>:</dt>
                <dd>The participant accepts an iMIP <xref target="RFC6047"/> request at this email address. The value <bcp14>MUST</bcp14> be a
		<tt>mailto:</tt> URI. It <bcp14>MAY</bcp14> be different from the value of the participant's
		<tt>email</tt> property.</dd>
                <dt><tt>other</tt>:</dt>
                <dd>The participant is identified by this URI, but the method for submitting the invitation is
		undefined.</dd>
              </dl>
            </dd>
            <dt>kind: <tt>String</tt> (optional)</dt>
            <dd>
              <t>This is what kind of entity this participant is, if known.</t>
              <t>This <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>). Any value the client or server doesn't understand should be treated the same as if this property is omitted.</t>
              <dl newline="false">
                <dt><tt>individual</tt>:</dt>
                <dd> a single person</dd>
                <dt><tt>group</tt>:</dt>
                <dd>a collection of people invited as a whole</dd>
                <dt><tt>location</tt>:</dt>
                <dd> a physical location that needs to be scheduled, e.g., a conference room</dd>
                <dt><tt>resource</tt>:</dt>
                <dd>a non-human resource other than a location, such as a projector</dd>
              </dl>
            </dd>
            <dt>roles: <tt>String[Boolean]</tt> (mandatory)</dt>
            <dd>
              <t>This is a set of roles that this participant fulfills.</t>
              <t>At least one role <bcp14>MUST</bcp14> be specified for the participant. The keys in the set <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>):</t>
              <dl newline="false">
                <dt><tt>owner</tt>:</dt>
                <dd> The participant is an owner of the object. This signifies they have permission to make
		changes to it that affect the other participants. Nonowner participants may only change
		properties that affect only themselves (for example, setting their own alerts or changing their
		RSVP status).</dd>
                <dt><tt>attendee</tt>:</dt>
                <dd>The participant is expected to be present at the event.</dd>
                <dt><tt>optional</tt>:</dt>
                <dd>The participant's involvement with the event is optional. This is expected to be primarily
		combined with the "attendee" role.</dd>
                <dt><tt>informational</tt>:</dt>
                <dd> The participant is copied for informational reasons and is not expected to attend.</dd>
                <dt><tt>chair</tt>:</dt>
                <dd> The participant is in charge of the event/task when it occurs.</dd>
                <dt><tt>contact</tt>:</dt>
                <dd> The participant is someone that may be contacted for information about the event.</dd>
              </dl>
              <t>The value for each key in the map <bcp14>MUST</bcp14> be true. It is expected that no more than one of the roles "attendee" and "informational" be present; if more than one are given, "attendee" takes precedence over "informational". Roles that are unknown to the implementation <bcp14>MUST</bcp14> be preserved.</t>
            </dd>
            <dt>locationId: <tt>Id</tt> (optional)</dt>
            <dd>
              <t>This is the location at which this participant is expected to be attending.</t>
              <t>If the value does not correspond to any location id in the <tt>locations</tt> property of the JSCalendar object, this <bcp14>MUST</bcp14> be treated the same as if the participant's locationId were omitted.</t>
            </dd>
            <dt>language: <tt>String</tt> (optional)</dt>
            <dd>This is the language tag, as defined in <xref target="RFC5646"/>, that best
	            describes
		          the participant's preferred language, if known.</dd>
            <dt>participationStatus: <tt>String</tt> (optional, default: <tt>needs-action</tt>)</dt>
            <dd>
              <t>This is the participation status, if any, of this participant.</t>
              <t>The value <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>):</t>
              <dl newline="false">
                <dt><tt>needs-action</tt>:</dt>
                <dd> No status has yet been set by the participant.</dd>
                <dt><tt>accepted</tt>:</dt>
                <dd> The invited participant will participate.</dd>
                <dt><tt>declined</tt>:</dt>
                <dd>The invited participant will not participate.</dd>
                <dt><tt>tentative</tt>:</dt>
                <dd> The invited participant may participate.</dd>
                <dt><tt>delegated</tt>:</dt>
                <dd> The invited participant has delegated their attendance to another participant, as
		specified in the <tt>delegatedTo</tt> property.</dd>
              </dl>
            </dd>
            <dt>participationComment: <tt>String</tt> (optional)</dt>
            <dd>This is a  note from the participant to explain their participation status.</dd>
            <dt>expectReply: <tt>Boolean</tt> (optional, default: false)</dt>
            <dd>If true, the organizer is expecting the participant to notify them of their participation
	            status.</dd>
            <dt>scheduleAgent: <tt>String</tt> (optional, default: <tt>server</tt>)</dt>
            <dd>
              <t>This is who is responsible for sending scheduling messages with this calendar object to the participant.</t>
              <t>The value <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>):</t>
              <dl newline="false">
                <dt><tt>server</tt>:</dt>
                <dd> The calendar server will send the scheduling messages.</dd>
                <dt><tt>client</tt>:</dt>
                <dd> The calendar client will send the scheduling messages.</dd>
                <dt><tt>none</tt>:</dt>
                <dd> No scheduling messages are to be sent to this participant.</dd>
              </dl>
            </dd>
            <dt>scheduleForceSend: <tt>Boolean</tt> (optional, default: false)</dt>
            <dd>A client may set the property on a participant to true to request that the server send a
	            scheduling message to the participant when it would not normally do so (e.g., if no significant
		          change is made the object or the scheduleAgent is set to client). The property <bcp14>MUST NOT</bcp14> be stored in the JSCalendar object on the server or appear in a scheduling
				      message.</dd>
            <dt>scheduleSequence: <tt>UnsignedInt</tt> (optional, default: 0)</dt>
            <dd>
              <t>This is the sequence number of the last response from the participant. If defined, this <bcp14>MUST</bcp14> be a nonnegative integer.</t>
              <t>This can be used to determine whether the participant has sent a new response following significant changes to the calendar object and to determine if future responses are responding to a current or older view of the data.</t>
            </dd>
            <dt>scheduleStatus: <tt>String[]</tt> (optional)</dt>
            <dd>
              <t>This is a list of status codes, returned from the processing of the most recent scheduling message sent to this participant. The status codes MUST be valid <tt>statcode</tt> values as defined in the ABNF in <xref target="RFC5545" section="3.8.8.3"/>.</t>
              <t>Servers <bcp14>MUST</bcp14> only add or change this property when they send a scheduling message to the participant. Clients <bcp14>SHOULD NOT</bcp14> change or remove this property if it was provided by the server. Clients <bcp14>MAY</bcp14> add, change, or remove the property for participants where the client is handling the scheduling.</t>
              <t>This property <bcp14>MUST NOT</bcp14> be included in scheduling messages.</t>
            </dd>
            <dt>scheduleUpdated: <tt>UTCDateTime</tt> (optional)</dt>
            <dd>
              <t>This is the timestamp for the most recent response from this participant.</t>
              <t>This is the <tt>updated</tt> property of the last response when using iTIP. It can be compared to the <tt>updated</tt> property in future responses to detect and discard older responses delivered out of order.</t>
            </dd>
            <dt>sentBy: <tt>String</tt> (optional)</dt>
            <dd>
              <t>This is the email address in the "From" header of the email that last updated this participant via iMIP. This SHOULD only be set if the email address is different to that in the mailto URI of this participant's <tt>imip</tt> method in the <tt>sendTo</tt> property (i.e., the response was received from a different address to that which the invitation was sent to). If set, the value <bcp14>MUST</bcp14> be a valid <tt>addr-spec</tt> value as defined in Section 3.4.1 of <xref target="RFC5322"/>.</t>
            </dd>
            <dt>invitedBy: <tt>Id</tt> (optional)</dt>
            <dd>This is the id of the participant who added this participant to the event/task, if known.</dd>
            <dt>delegatedTo: <tt>Id[Boolean]</tt> (optional)</dt>
            <dd>This is set of participant ids that this participant has delegated their participation to.
		          Each key
			        in the set <bcp14>MUST</bcp14> be the id of a participant. The value for each key in the map
				      <bcp14>MUST</bcp14> be true. If there are no delegates, this <bcp14>MUST</bcp14> be omitted
				            (rather than specified as an empty set).</dd>
            <dt>delegatedFrom: <tt>Id[Boolean]</tt> (optional)</dt>
            <dd>This is a set of participant ids that this participant is acting as a delegate for. Each key
	            in the set <bcp14>MUST</bcp14> be the id of a participant. The value for each key in the map
		          <bcp14>MUST</bcp14> be true. If there are no delegators, this <bcp14>MUST</bcp14> be omitted
			        (rather than specified as an empty set).</dd>
            <dt>memberOf: <tt>Id[Boolean]</tt> (optional)</dt>
            <dd>This is a set of group participants that were invited to this calendar object, which caused
	            this
		          participant to be invited due to their membership in the group(s). Each key in the set
			        <bcp14>MUST</bcp14> be the id of a participant. The value for each key in the map
				      <bcp14>MUST</bcp14> be true. If there are no groups, this <bcp14>MUST</bcp14> be omitted (rather
				            than specified as an empty set).</dd>
            <dt>links: <tt>Id[Link]</tt> (optional)</dt>
            <dd>This is a map of link ids to Link objects, representing external resources associated with
	            this participant, for example, a vCard or image. If there are no links, this <bcp14>MUST</bcp14>
		          be omitted (rather than specified as an empty set).</dd>
            <dt>progress: <tt>String</tt> (optional; only allowed for participants of a Task)</dt>
            <dd>This represents the progress of the participant for this task. It <bcp14>MUST NOT</bcp14> be
		    set if
		        the <tt>participationStatus</tt> of this participant is any value other than <tt>accepted</tt>. See
			    <xref target="prop-progress"/> for allowed values and semantics.</dd>
            <dt>progressUpdated: <tt>UTCDateTime</tt> (optional; only allowed for participants of a
	        Task)</dt>
            <dd>This specifies the date-time the <tt>progress</tt> property was last set on this participant. See <xref target="prop-progressUpdated"/> for allowed values and semantics.</dd>
            <dt>percentComplete: <tt>UnsignedInt</tt> (optional; only allowed for participants of a Task)</dt>
            <dd>This represents the percent completion of the participant for this task. The property value <bcp14>MUST</bcp14> be a positive integer between 0 and 100.</dd>
          </dl>
        </section>
        <section anchor="prop-requestStatus">
          <name>requestStatus</name>
          <t>Type: <tt>String</tt> (optional)</t>
          <t>A request status as returned from processing the most recent scheduling request for this JSCalendar object. The allowed values are defined by the ABNF definitions of <tt>statcode</tt>, <tt>statdesc</tt> and <tt>extdata</tt> in <xref target="RFC5545" section="3.8.8.3"/> and the following ABNF <xref target="RFC5234"/> :</t>
          <sourcecode name="" type="abnf">
reqstatus = statcode ";" statdesc [";" extdata]
</sourcecode>
          <t>Servers <bcp14>MUST</bcp14> only add or change this property when they performe a scheduling action. Clients <bcp14>SHOULD NOT</bcp14> change or remove this property if it was provided by the server. Clients <bcp14>MAY</bcp14> add, change, or remove the property when the client is handling the scheduling.</t>
          <t>This property <bcp14>MUST</bcp14> only be included in scheduling messages according to the rules defined for the REQUEST-STATUS iCalendar property in <xref target="RFC5546"/>.</t>
        </section>
      </section>
      <section anchor="alerts-properties">
        <name>Alerts Properties</name>
        <section anchor="useDefaultAlerts">
          <name>useDefaultAlerts</name>
          <t>Type: <tt>Boolean</tt> (optional, default: false)</t>
          <t>If true, use the user's default alerts and ignore the value of the <tt>alerts</tt> property. Fetching user defaults is dependent on the API from which this JSCalendar object is being fetched and is not defined in this specification. If an implementation cannot determine the user's default alerts, or none are set, it <bcp14>MUST</bcp14> process the <tt>alerts</tt> property as if <tt>useDefaultAlerts</tt> is set to false.</t>
        </section>
        <section anchor="prop-alerts">
          <name>alerts</name>
          <t>Type: <tt>Id[Alert]</tt> (optional)</t>
          <t>This is a map of alert ids to Alert objects, representing alerts/reminders to display or send to the user for this calendar object.</t>
          <t>An Alert object has the following properties:</t>
          <dl newline="true">
            <dt>@type: <tt>String</tt> (mandatory)</dt>
            <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be <tt>Alert</tt>.</dd>
            <dt>trigger: <tt>OffsetTrigger|AbsoluteTrigger|UnknownTrigger</tt> (mandatory)</dt>
            <dd>
              <t>This defines when to trigger the alert. New types may be defined in future documents.</t>
              <t>An <tt>OffsetTrigger</tt> object has the following properties:</t>
              <dl newline="true">
                <dt>@type: <tt>String</tt> (mandatory)</dt>
                <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be
		    <tt>OffsetTrigger</tt>.</dd>
                <dt>offset: <tt>SignedDuration</tt> (mandatory)</dt>
                <dd>This defines the offset at which to trigger the alert relative to the time property
		    defined in the <tt>relativeTo</tt> property of the alert. Negative durations signify alerts
		      before the time property; positive durations signify alerts after the time property.</dd>
                <dt>relativeTo: <tt>String</tt> (optional, default: <tt>start</tt>)</dt>
                <dd>
                  <t>This specifies the time property that the alert offset is relative to. The value <bcp14>MUST</bcp14> be one of the following:</t>
                  <dl newline="false">
                    <dt><tt>start</tt>:</dt>
                    <dd> triggers the alert relative to the start of the calendar object</dd>
                    <dt><tt>end</tt>:</dt>
                    <dd> triggers the alert relative to the end/due time of the calendar object</dd>
                  </dl>
                </dd>
              </dl>
              <t>An <tt>AbsoluteTrigger</tt> object has the following properties:</t>
              <dl newline="true">
                <dt>@type: <tt>String</tt> (mandatory)</dt>
                <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be
		    <tt>AbsoluteTrigger</tt>.</dd>
                <dt>when: <tt>UTCDateTime</tt> (mandatory)</dt>
                <dd>This defines a specific UTC date-time when the alert is triggered.</dd>
              </dl>
              <t>An <tt>UnknownTrigger</tt> object is an object that contains an <tt>@type</tt> property whose value is not recognized (i.e., not <tt>OffsetTrigger</tt> or <tt>AbsoluteTrigger</tt>) plus zero or more other properties. This is for compatibility with client extensions and future specifications. Implementations <bcp14>SHOULD NOT</bcp14> trigger for trigger types they do not understand but <bcp14>MUST</bcp14> preserve them.</t>
            </dd>
            <dt>acknowledged: <tt>UTCDateTime</tt> (optional)</dt>
            <dd>
              <t>This records when an alert was last acknowledged. This is set when the user has dismissed the alert; other clients that sync this property <bcp14>SHOULD</bcp14> automatically dismiss or suppress duplicate alerts (alerts with the same alert id that triggered on or before this date-time).</t>
              <t>For a recurring calendar object, setting the <tt>acknowledged</tt> property <bcp14>MUST NOT</bcp14> add a new override to the <tt>recurrenceOverrides</tt> property. If the alert is not already overridden, the <tt>acknowledged</tt> property <bcp14>MUST</bcp14> be set on the alert in the base event/task.</t>
              <t>Certain kinds of alert action may not provide feedback as to when the user sees them, for example, email-based alerts. For those kinds of alerts, this property <bcp14>MUST</bcp14> be set immediately when the alert is triggered and the action is successfully carried out.</t>
            </dd>
            <dt>relatedTo: <tt>String[Relation]</tt> (optional)</dt>
            <dd>This relates this alert to other alerts in the same JSCalendar object. If the user wishes to
		          snooze an alert, the application <bcp14>MUST</bcp14> create an alert to trigger after snoozing.
			        This new snooze alert <bcp14>MUST</bcp14> set a parent relation to the identifier of the original
				      alert.</dd>
            <dt>action: <tt>String</tt> (optional, default: <tt>display</tt>)</dt>
            <dd>
              <t>This describes how to alert the user.</t>
              <t>The value <bcp14>MUST</bcp14> be at most one of the following values, a value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>):</t>
              <dl newline="false">
                <dt><tt>display</tt>:</dt>
                <dd>The alert should be displayed as appropriate for the current device and user context.</dd>
                <dt><tt>email</tt>:</dt>
                <dd>The alert should trigger an email sent out to the user, notifying them of the alert. This
		action is typically only appropriate for server implementations.</dd>
              </dl>
            </dd>
          </dl>
        </section>
      </section>
      <section anchor="localized-props">
        <name>Multilingual Properties</name>
        <section anchor="prop-localizations">
          <name>localizations</name>
          <t>Type: <tt>String[PatchObject]</tt> (optional)</t>
          <t>A map where each key is a language tag <xref target="RFC5646"/>, and the corresponding value is a set of patches to apply to the calendar object in order to localize it into that locale.</t>
          <t>See the description of <xref target="type-PatchObject">PatchObject</xref> for the structure of the PatchObject. The patches are applied to the top-level calendar object. In addition, the <tt>locale</tt> property of the patched object is set to the language tag. All pointers for patches <bcp14>MUST</bcp14> end with one of the following suffixes; any patch that does not follow this <bcp14>MUST</bcp14> be ignored unless otherwise specified in a future RFC:</t>
          <ul>
            <li>title</li>
            <li>description</li>
            <li>name</li>
          </ul>
          <t>A patch <bcp14>MUST NOT</bcp14> have the prefix <tt>recurrenceOverrides</tt> ; any localization of the override <bcp14>MUST</bcp14> be a patch to the <tt>localizations</tt> property inside the override instead. For example, a patch to <tt>locations/abcd1234/title</tt> is permissible, but a patch to <tt>uid</tt> or <tt>recurrenceOverrides/2020-01-05T14:00:00/title</tt> is not.</t>
          <t>Note that this specification does not define how to maintain validity of localized content. For example, a client application changing a JSCalendar object's <tt>title</tt> property might also need to update any localizations of this property. Client implementations <bcp14>SHOULD</bcp14> provide the means to manage localizations, but how to achieve this is specific to the application's workflow and requirements.</t>
        </section>
      </section>
      <section anchor="timezone-props">
        <name>Time Zone Properties</name>
        <section anchor="prop-timeZone">
          <name>timeZone</name>
          <t>Type: <tt>TimeZoneId|null</tt> (optional, default: null)</t>
          <t>This identifies the time zone the object is scheduled in or is null for floating time. This is either a name from the IANA Time Zone Database <xref target="TZDB"/> or the TimeZoneId of a custom time zone from the <tt>timeZones</tt> property ( <xref target="prop-timeZones"/>). If omitted, this <bcp14>MUST</bcp14> be presumed to be null (i.e., floating time).</t>
        </section>
        <section anchor="prop-timeZones">
          <name>timeZones</name>
          <t>Type: <tt>TimeZoneId[TimeZone]</tt> (optional)</t>
          <t>This maps identifiers of custom time zones to their time zone definitions. The following restrictions apply for each key in the map:</t>
          <ul>
            <li>To avoid conflict with names in the IANA Time Zone Database <xref target="TZDB"/>, it <bcp14>MUST</bcp14> start with the <tt>/</tt> character.</li>
            <li>It <bcp14>MUST</bcp14> be a valid <tt>paramtext</tt> value, as specified in <xref target="RFC5545" section="3.1"/>.</li>
            <li>At least one other property in the same JSCalendar object <bcp14>MUST</bcp14> reference a time zone using this identifier (i.e., orphaned time zones are not allowed).</li>
          </ul>
          <t>An identifier need only be unique to this JSCalendar object. It <bcp14>MAY</bcp14> differ from the <tt>tzId</tt> property value of the TimeZone object it maps to.</t>
          <t>A JSCalendar object may be part of a hierarchy of other JSCalendar objects (say, an Event is an entry in a Group). In this case, the set of time zones is the sum of the time zone definitions of this object and its parent objects. If multiple time zones with the same identifier exist, then the definition closest to the calendar object in relation to its parents <bcp14>MUST</bcp14> be used. (In context of Event, a time zone definition in its <tt>timeZones</tt> property has precedence over a definition of the same id in the Group). Time zone definitions in any children of the calendar object <bcp14>MUST</bcp14> be ignored.</t>
          <t>A TimeZone object maps a VTIMEZONE component from iCalendar, and the semantics are as defined in <xref target="RFC5545"/>. A valid time zone <bcp14>MUST</bcp14> define at least one transition rule in the <tt>standard</tt> or <tt>daylight</tt> property. Its properties are:</t>
          <dl newline="true">
            <dt>@type: <tt>String</tt> (mandatory)</dt>
            <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be <tt>TimeZone</tt>.</dd>
            <dt>tzId: <tt>String</tt> (mandatory)</dt>
            <dd>This is the TZID property from iCalendar. Note that this implies that the value <bcp14>MUST</bcp14> be a valid <tt>paramtext</tt> value as specified in Section 3.1. of <xref target="RFC5545"/>.</dd>
            <dt>updated: <tt>UTCDateTime</tt> (optional)</dt>
            <dd>This is the LAST-MODIFIED property from iCalendar.</dd>
            <dt>url: <tt>String</tt> (optional)</dt>
            <dd>This is the TZURL property from iCalendar.</dd>
            <dt>validUntil: <tt>UTCDateTime</tt> (optional)</dt>
            <dd>This is the TZUNTIL property from iCalendar, specified in <xref target="RFC7808"/>.</dd>
            <dt>aliases: <tt>String[Boolean]</tt> (optional)</dt>
            <dd>This maps the TZID-ALIAS-OF properties from iCalendar, specified in <xref target="RFC7808"/>, to a JSON set of aliases. The set is represented as an object, with the keys
	            being the aliases. The value for each key in the map <bcp14>MUST</bcp14> be true.</dd>
            <dt>standard: <tt>TimeZoneRule[]</tt> (optional)</dt>
            <dd>This the STANDARD sub-components from iCalendar. The order <bcp14>MUST</bcp14> be preserved
	            during conversion.</dd>
            <dt>daylight: <tt>TimeZoneRule[]</tt> (optional)</dt>
            <dd>This the DAYLIGHT sub-components from iCalendar. The order <bcp14>MUST</bcp14> be preserved
	            during conversion.</dd>
          </dl>
          <t>A TimeZoneRule object maps a STANDARD or DAYLIGHT sub-component from iCalendar, with the restriction that, at most, one recurrence rule is allowed per rule. It has the following properties:</t>
          <dl newline="true">
            <dt>@type: <tt>String</tt> (mandatory)</dt>
            <dd>This specifies the type of this object. This <bcp14>MUST</bcp14> be
	            <tt>TimeZoneRule</tt>.</dd>
            <dt>start: <tt>LocalDateTime</tt> (mandatory)</dt>
            <dd>This is the DTSTART property from iCalendar.</dd>
            <dt>offsetFrom: <tt>String</tt> (mandatory)</dt>
            <dd>This is the TZOFFSETFROM property from iCalendar.</dd>
            <dt>offsetTo: <tt>String</tt> (mandatory)</dt>
            <dd>This is the TZOFFSETTO property from iCalendar.</dd>
            <dt>recurrenceRules: <tt>RecurrenceRule[]</tt> (optional)</dt>
            <dd>This is the RRULE property mapped, as specified in <xref target="prop-recurrenceRules"/>. During recurrence rule evaluation, the <tt>until</tt> property value
	            <bcp14>MUST</bcp14> be interpreted as a local time in the UTC time zone.</dd>
            <dt>recurrenceOverrides: <tt>LocalDateTime[PatchObject]</tt> (optional)</dt>
            <dd>This maps the RDATE properties from iCalendar. The set is represented as an object, with the
	            keys being the recurrence dates. The patch object <bcp14>MUST</bcp14> be the empty JSON object
		          ({}).</dd>
            <dt>names: <tt>String[Boolean]</tt> optional)</dt>
            <dd>This maps the TZNAME properties from iCalendar to a JSON set. The set is represented as an
	            object, with the keys being the names, excluding any <tt>tznparam</tt> component from iCalendar.
		          The value for each key in the map <bcp14>MUST</bcp14> be true.</dd>
            <dt>comments: <tt>String[]</tt> (optional)</dt>
            <dd> This maps the COMMENT properties from iCalendar. The order <bcp14>MUST</bcp14> be preserved
		    during conversion.</dd>
          </dl>
        </section>
      </section>
    </section>
    <section anchor="jscalendar-object-props">
      <name>Type-Specific JSCalendar Properties</name>
      <section anchor="jsevent-props">
        <name>Event Properties</name>
        <t>In addition to the common JSCalendar object <xref target="jscalendar-props">properties</xref>, an Event has the following properties:</t>
        <section anchor="prop-start-jsevent">
          <name>start</name>
          <t>Type: <tt>LocalDateTime</tt> (mandatory)</t>
          <t>This is the date/time the event starts in the event's time zone (as specified in the <tt>timeZone</tt> property, see <xref target="prop-timeZone"/>).</t>
        </section>
        <section anchor="prop-duration">
          <name>duration</name>
          <t>Type: <tt>Duration</tt> (optional, default: <tt>PT0S</tt>)</t>
          <t>This is the zero or positive duration of the event in the event's start time zone. The end time of an event can be found by adding the duration to the event's start time.</t>
          <t>An Event <bcp14>MAY</bcp14> involve start and end locations that are in different time zones (e.g., a transcontinental flight). This can be expressed using the <tt>relativeTo</tt> and <tt>timeZone</tt> properties of the Event's Location objects (see <xref target="prop-locations"/>).</t>
        </section>
        <section anchor="prop-status-jsevent">
          <name>status</name>
          <t>Type: <tt>String</tt> (optional, default: <tt>confirmed</tt>)</t>
          <t>This is the scheduling status ( <xref target="sharing-scheduling-properties"/>) of an Event. If set, it <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>):</t>
          <dl newline="false">
            <dt><tt>confirmed</tt>:</dt>
            <dd>indicates the event is definitely happening</dd>
            <dt><tt>cancelled</tt>:</dt>
            <dd>indicates the event has been cancelled</dd>
            <dt><tt>tentative</tt>:</dt>
            <dd>indicates the event may happen</dd>
          </dl>
        </section>
      </section>
      <section anchor="jstask-props">
        <name>Task Properties</name>
        <t>In addition to the common JSCalendar object <xref target="jscalendar-props">properties</xref>, a Task has the following properties:</t>
        <section anchor="prop-due">
          <name>due</name>
          <t>Type: <tt>LocalDateTime</tt> (optional)</t>
          <t>This is the date/time the task is due in the task's time zone.</t>
        </section>
        <section anchor="prop-start-jstask">
          <name>start</name>
          <t>Type: <tt>LocalDateTime</tt> (optional)</t>
          <t>This the date/time the task should start in the task's time zone.</t>
        </section>
        <section anchor="prop-estimatedDuration">
          <name>estimatedDuration</name>
          <t>Type: <tt>Duration</tt> (optional)</t>
          <t>This specifies the estimated positive duration of time the task takes to complete.</t>
        </section>
        <section anchor="prop-percentComplete">
          <name>percentComplete</name>
          <t>Type: <tt>UnsignedInt</tt> (optional)</t>
          <t>This represents the percent completion of the task overall. The property value <bcp14>MUST</bcp14> be a positive integer between 0 and 100.</t>
        </section>
        <section anchor="prop-progress">
          <name>progress</name>
          <t>Type: <tt>String</tt> (optional)</t>
          <t>This defines the progress of this task. If omitted, the default progress ( <xref target="sharing-scheduling-properties"/>) of a Task is defined as follows (in order of evaluation):</t>
          <dl newline="false">
            <dt><tt>completed</tt>:</dt>
            <dd>if the <tt>progress</tt> property value of all participants is <tt>completed</tt></dd>
            <dt><tt>failed</tt>:</dt>
            <dd> if at least one <tt>progress</tt> property value of a participant is <tt>failed</tt></dd>
            <dt><tt>in-process</tt>:</dt>
            <dd> if at least one <tt>progress</tt> property value of a participant is <tt>in-process</tt></dd>
            <dt><tt>needs-action</tt>:</dt>
            <dd>if none of the other criteria match</dd>
          </dl>
          <t>If set, it <bcp14>MUST</bcp14> be one of the following values, another value registered in the IANA "JSCalendar Enum Values" registry, or a vendor-specific value (see <xref target="custom-properties"/>):</t>
          <dl newline="false">
            <dt><tt>needs-action</tt>:</dt>
            <dd>indicates the task needs action</dd>
            <dt><tt>in-process</tt>:</dt>
            <dd>indicates the task is in process</dd>
            <dt><tt>completed</tt>:</dt>
            <dd>indicates the task is completed</dd>
            <dt><tt>failed</tt>:</dt>
            <dd>indicates the task failed</dd>
            <dt><tt>cancelled</tt>:</dt>
            <dd>indicates the task was cancelled</dd>
          </dl>
        </section>
        <section anchor="prop-progressUpdated">
          <name>progressUpdated</name>
          <t>Type: <tt>UTCDateTime</tt> (optional)</t>
          <t>This specifies the date/time the <tt>progress</tt> property of either the task overall ( <xref target="prop-progress"/>) or a specific participant ( <xref target="prop-participants"/>) was last updated.</t>
          <t>If the task is recurring and has future instances, a client may want to keep track of the last progress update timestamp of a specific task recurrence but leave other instances unchanged. One way to achieve this is by overriding the <tt>progressUpdated</tt> property in the task <tt>recurrenceOverrides</tt> property. However, this could produce a long list of timestamps for regularly recurring tasks. An alternative approach is to split the Task into a current, single instance of Task with this instance progress update time and a future recurring instance. See also <xref target="prop-relatedTo"/> on splitting.</t>
        </section>
      </section>
      <section anchor="jsgroup-props">
        <name>Group Properties</name>
        <t>Group supports the following common <xref target="jscalendar-props">JSCalendar properties</xref> :</t>
        <ul>
          <li>@type</li>
          <li>uid</li>
          <li>prodId</li>
          <li>created</li>
          <li>updated</li>
          <li>title</li>
          <li>description</li>
          <li>descriptionContentType</li>
          <li>links</li>
          <li>locale</li>
          <li>keywords</li>
          <li>categories</li>
          <li>color</li>
          <li>timeZones</li>
        </ul>
        <t>In addition, the following Group-specific properties are supported:</t>
        <section anchor="prop-entries">
          <name>entries</name>
          <t>Type: <tt>(Task|Event)[]</tt> (mandatory)</t>
          <t>This is a collection of group members. Implementations <bcp14>MUST</bcp14> ignore entries of unknown type.</t>
        </section>
        <section anchor="prop-source">
          <name>source</name>
          <t>Type: <tt>String</tt> (optional)</t>
          <t>This is the source from which updated versions of this group may be retrieved. The value <bcp14>MUST</bcp14> be a URI.</t>
        </section>
      </section>
    </section>
    <section anchor="examples">
      <name>Examples</name>
      <t>The following examples illustrate several aspects of the JSCalendar data model and format. The examples may omit mandatory or additional properties, which is indicated by a placeholder property with key <tt>...</tt>. While most of the examples use calendar event objects, they are also illustrative for tasks.</t>
      <section anchor="example-simple-event">
        <name>Simple Event</name>
        <t>This example illustrates a simple one-time event. It specifies a one-time event that begins on January 15, 2020 at 1 pm New York local time and ends after 1 hour.</t>
        <sourcecode name="" type="json">
{
  "@type": "Event",
  "uid": "a8df6573-0474-496d-8496-033ad45d7fea",
  "updated": "2020-01-02T18:23:04Z",
  "title": "Some event",
  "start": "2020-01-15T13:00:00",
  "timeZone": "America/New_York",
  "duration": "PT1H"
}
</sourcecode>
      </section>
      <section anchor="example-simple-task">
        <name>Simple Task</name>
        <t>This example illustrates a simple task for a plain to-do item.</t>
        <sourcecode name="" type="json">
{
  "@type": "Task",
  "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f2",
  "updated": "2020-01-09T14:32:01Z",
  "title": "Do something"
}
</sourcecode>
      </section>
      <section anchor="example-simple-group">
        <name>Simple Group</name>
        <t>This example illustrates a simple calendar object group that contains an event and a task.</t>
        <sourcecode name="" type="json">
{
  "@type": "Group",
  "uid": "bf0ac22b-4989-4caf-9ebd-54301b4ee51a",
  "updated": "2020-01-15T18:00:00Z",
  "title": "A simple group",
  "entries": [{
    "@type": "Event",
    "uid": "a8df6573-0474-496d-8496-033ad45d7fea",
    "updated": "2020-01-02T18:23:04Z",
    "title": "Some event",
    "start": "2020-01-15T13:00:00",
    "timeZone": "America/New_York",
    "duration": "PT1H"
  },
  {
    "@type": "Task",
    "uid": "2a358cee-6489-4f14-a57f-c104db4dc2f2",
    "updated": "2020-01-09T14:32:01Z",
    "title": "Do something"
  }]
}
</sourcecode>
      </section>
      <section anchor="example-all-day-event">
        <name>All-Day Event</name>
        <t>This example illustrates an event for an international holiday. It specifies an all-day event on April 1 that occurs every year since the year 1900.</t>
        <sourcecode name="" type="json">
{
  "...": "",
  "title": "April Fool's Day",
  "showWithoutTime": true,
  "start": "1900-04-01T00:00:00",
  "duration": "P1D",
  "recurrenceRules": [{
    "@type": "RecurrenceRule",
    "frequency": "yearly"
  }]
}
</sourcecode>
      </section>
      <section anchor="example-due-task">
        <name>Task with a Due Date</name>
        <t>This example illustrates a task with a due date. It is a reminder to buy groceries before 6 pm Vienna local time on January 19, 2020. The calendar user expects to need 1 hour for shopping.</t>
        <sourcecode name="" type="json">
{
  "...": "",
  "title": "Buy groceries",
  "due": "2020-01-19T18:00:00",
  "timeZone": "Europe/Vienna",
  "estimatedDuration": "PT1H"
}
</sourcecode>
      </section>
      <section anchor="example-zoned-event-endtz">
        <name>Event with End Time Zone</name>
        <t>This example illustrates the use of end time zones by use of an international flight. The flight starts on April 1, 2020 at 9 am in Berlin local time. The duration of the flight is scheduled at 10 hours 30 minutes. The time at the flight's destination is in the same time zone as Tokyo. Calendar clients could use the end time zone to display the arrival time in Tokyo local time and highlight the time zone difference of the flight. The location names can serve as input for navigation systems.</t>
        <sourcecode name="" type="json">
{
  "...": "",
  "title": "Flight XY51 to Tokyo",
  "start": "2020-04-01T09:00:00",
  "timeZone": "Europe/Berlin",
  "duration": "PT10H30M",
  "locations": {
    "1": {
      "@type": "Location",
      "rel": "start",
      "name": "Frankfurt Airport (FRA)"
    },
    "2": {
      "@type": "Location",
      "rel": "end",
      "name": "Narita International Airport (NRT)",
      "timeZone": "Asia/Tokyo"
    }
  }
}
</sourcecode>
      </section>
      <section anchor="example-floating-event">
        <name>Floating-Time Event (with Recurrence)</name>
        <t>This example illustrates the use of floating time. Since January 1, 2020, a calendar user blocks 30 minutes every day to practice yoga at 7 am local time in whatever time zone the user is located on that date.</t>
        <sourcecode name="" type="json">
{
  "...": "",
  "title": "Yoga",
  "start": "2020-01-01T07:00:00",
  "duration": "PT30M",
  "recurrenceRules": [{
    "@type": "RecurrenceRule",
    "frequency": "daily"
  }]
}
</sourcecode>
      </section>
      <section anchor="example-multi-location-event">
        <name>Event with Multiple Locations and Localization</name>
        <t>This example illustrates an event that happens at both a physical and a virtual location. Fans can see a live concert on premises or online. The event title and descriptions are localized.</t>
        <sourcecode name="" type="json">
{
  "...": "",
  "title": "Live from Music Bowl: The Band",
  "description": "Go see the biggest music event ever!",
  "locale": "en",
  "start": "2020-07-04T17:00:00",
  "timeZone": "America/New_York",
  "duration": "PT3H",
  "locations": {
    "c0503d30-8c50-4372-87b5-7657e8e0fedd": {
      "@type": "Location",
      "name": "The Music Bowl",
      "description": "Music Bowl, Central Park, New York",
      "coordinates": "geo:40.7829,-73.9654"
    }
  },
  "virtualLocations": {
    "vloc1": {
      "@type": "VirtualLocation",
      "name": "Free live Stream from Music Bowl",
      "uri": "https://stream.example.com/the_band_2020"
    }
  },
  "localizations": {
    "de": {
      "title": "Live von der Music Bowl: The Band!",
      "description": "Schau dir das grÃ¶Ãte Musikereignis an!",
      "virtualLocations/vloc1/name":
        "Gratis Live-Stream aus der Music Bowl"
    }
  }
}
</sourcecode>
      </section>
      <section anchor="example-recurring-overrides">
        <name>Recurring Event with Overrides</name>
        <t>This example illustrates the use of recurrence overrides. A math course at a university is held for the first time on January 8, 2020 at 9 am London time and occurs every week until June 24, 2020. Each lecture lasts for one hour and 30 minutes and is located at the Mathematics department. This event has exceptional occurrences: at the last occurrence of the course is an exam, which lasts for 2 hours and starts at 10 am. Also, the location of the exam differs from the usual location. On April 1, no course is held. On January 7 at 2 pm, there is an optional introduction course, which occurs before the first regular lecture.</t>
        <sourcecode name="" type="json">
{
  "...": "",
  "title": "Calculus I",
  "start": "2020-01-08T09:00:00",
  "timeZone": "Europe/London",
  "duration": "PT1H30M",
  "locations": {
    "mlab": {
      "@type": "Location",
      "title": "Math lab room 1",
      "description": "Math Lab I, Department of Mathematics"
    }
  },
  "recurrenceRules": [{
    "@type": "RecurrenceRule",
    "frequency": "weekly",
    "until": "2020-06-24T09:00:00"
  }],
  "recurrenceOverrides": {
    "2020-01-07T14:00:00": {
      "title": "Introduction to Calculus I (optional)"
    },
    "2020-04-01T09:00:00": {
      "excluded": true
    },
    "2020-06-25T09:00:00": {
      "title": "Calculus I Exam",
      "start": "2020-06-25T10:00:00",
      "duration": "PT2H",
      "locations": {
        "auditorium": {
          "@type": "Location",
          "title": "Big Auditorium",
          "description": "Big Auditorium, Other Road"
        }
      }
    }
  }
}
</sourcecode>
      </section>
      <section anchor="example-recurring-participants">
        <name>Recurring Event with Participants</name>
        <t>This example illustrates scheduled events. A team meeting occurs every week since January 8, 2020 at 9 am Johannesburg time. The event owner also chairs the event. Participants meet in a virtual meeting room. An attendee has accepted the invitation, but, on March 4, 2020, he is unavailable and declined participation for this occurrence.</t>
        <sourcecode name="" type="json">
{
  "...": "",
  "title": "FooBar team meeting",
  "start": "2020-01-08T09:00:00",
  "timeZone": "Africa/Johannesburg",
  "duration": "PT1H",
  "virtualLocations": {
    "0": {
      "@type": "VirtualLocation",
      "name": "ChatMe meeting room",
      "uri": "https://chatme.example.com?id=1234567&amp;pw=a8a24627b63d"
    }
  },
  "recurrenceRules": [{
    "@type": "RecurrenceRule",
    "frequency": "weekly"
  }],
  "replyTo": {
    "imip": "mailto:f245f875-7f63-4a5e-a2c8@schedule.example.com"
  },
  "participants": {
    "dG9tQGZvb2Jhci5xlLmNvbQ": {
      "@type": "Participant",
      "name": "Tom Tool",
      "email": "tom@foobar.example.com",
      "sendTo": {
        "imip": "mailto:tom@calendar.example.com"
      },
      "participationStatus": "accepted",
      "roles": {
        "attendee": true
      }
    },
    "em9lQGZvb2GFtcGxlLmNvbQ": {
      "@type": "Participant",
      "name": "Zoe Zelda",
      "email": "zoe@foobar.example.com",
      "sendTo": {
        "imip": "mailto:zoe@foobar.example.com"
      },
      "participationStatus": "accepted",
      "roles": {
        "owner": true,
        "attendee": true,
        "chair": true
      }
    }
  },
  "recurrenceOverrides": {
    "2020-03-04T09:00:00": {
      "participants/dG9tQGZvb2Jhci5xlLmNvbQ/participationStatus":
                                                          "declined"
    }
  }
}
</sourcecode>
      </section>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>Calendaring and scheduling information is very privacy sensitive.  It can reveal the social network of a user, location information of this user and those in their social network, identity and credentials information, and patterns of behavior of the user in both the physical and cyber realm. Additionally, calendar events and tasks can influence the physical location of a user or their cyber behavior within a known time window.  Its transmission and storage must be done carefully to protect it from possible threats, such as eavesdropping, replay, message insertion, deletion, modification, and on-path attacks.</t>
      <t>The data being stored and transmitted may be used in systems with real-world consequences. For example, a home automation system may turn an alarm on and off  or a coworking space may charge money to the organizer of an event that books one of their meeting rooms. Such systems must be careful to authenticate all data they receive to prevent them from being subverted and ensure the change comes from an authorized entity.</t>
      <t>This document only defines the data format; such considerations are primarily the concern of the API or method of storage and transmission of such files.</t>
      <section anchor="sec-recurrences">
        <name>Expanding Recurrences</name>
        <t>A recurrence rule may produce infinite occurrences of an event. Implementations <bcp14>MUST</bcp14> handle expansions carefully to prevent accidental or deliberate resource exhaustion.</t>
        <t>Conversely, a recurrence rule may be specified that does not expand to anything. It is not always possible to tell this through static analysis of the rule, so implementations <bcp14>MUST</bcp14> be careful to avoid getting stuck in infinite loops or otherwise exhausting resources while searching for the next occurrence.</t>
        <t>Events recur in the event's time zone. If the user is in a different time zone, daylight saving transitions may cause an event that normally occurs at, for example, 9 am to suddenly shift an hour earlier. This may be used in an attempt to cause a participant to miss an important meeting. User agents must be careful to translate date-times correctly between time zones and may wish to call out unexpected changes in the time of a recurring event.</t>
      </section>
      <section anchor="json-parsing">
        <name>JSON Parsing</name>
        <t>The security considerations of <xref target="RFC8259"/> apply to the use of JSON as the data interchange format.</t>
        <t>As for any serialization format, parsers need to thoroughly check the syntax of the supplied data. JSON uses opening and closing tags for several types and structures, and it is possible that the end of the supplied data will be reached when scanning for a matching closing tag; this is an error condition, and implementations need to stop scanning at the end of the supplied data.</t>
        <t>JSON also uses a string encoding with some escape sequences to encode special characters within a string. Care is needed when processing these escape sequences to ensure that they are fully formed before the special processing is triggered, with special care taken when the escape sequences appear adjacent to other (non-escaped) special characters or adjacent to the end of data (as in the previous paragraph).</t>
        <t>If parsing JSON into a non-textual structured data format, implementations may need to allocate storage to hold JSON string elements.  Since JSON does not use explicit string lengths, the risk of denial of service due to resource exhaustion is small, but implementations may still wish to place limits on the size of allocations they are willing to make in any given context, to avoid untrusted data causing excessive memory allocation.</t>
      </section>
      <section anchor="uri-values">
        <name>URI Values</name>
        <t>Several JSCalendar properties contain URIs as values, and processing these properties requires extra care. <xref target="RFC3986" section="7"/> discusses security risks related to URIs.</t>
        <t>Fetching remote resources carries inherent risks. Connections must only be allowed on well-known ports, using allowed protocols (generally, just HTTP/HTTPS on their default ports). The URL must be resolved externally and not allowed to access internal resources. Connecting to an external source reveals IP (and therefore often location) information.</t>
        <t>A maliciously constructed JSCalendar object may contain a very large number of URIs. In the case of published calendars with a large number of subscribers, such objects could be widely distributed. Implementations should be careful to limit the automatic fetching of linked resources to reduce the risk of this being an amplification vector for a denial-of-service attack.</t>
      </section>
      <section anchor="spam">
        <name>Spam</name>
        <t>Calendar systems may receive JSCalendar files from untrusted sources, in particular, as attachments to emails. This can be a vector for an attacker to inject spam into a user's calendar. This may confuse, annoy, and mislead users or overwhelm their calendar with bogus events, preventing them from seeing legitimate ones.</t>
        <t>Heuristic, statistical, or machine-learning-based filters can be effective in filtering out spam. Authentication mechanisms, such as DomainKeys Identified Mail (DKIM) <xref target="RFC6376"/>, can help establish the source of messages and associate the data with existing relationships (such as an address book contact). However, misclassifications are always possible and providing a mechanism for users to quickly correct this is advised.</t>
        <t>Confusable unicode characters may be used to trick a user into trusting a JSCalendar file that appears to come from a known contact but is actually from a similar-looking source controlled by an attacker.</t>
      </section>
      <section anchor="duplication">
        <name>Duplication</name>
        <t>It is important for calendar systems to maintain the UID of an event when updating it to avoid an unexpected duplication of events. Consumers of the data may not remove the previous version of the event if it has a different UID. This can lead to a confusing situation for the user, with many variations of the event and no indication of which one is correct. Care must be taken by consumers of the data to remove old events where possible to avoid an accidental denial-of-service attack due to the volume of data.</t>
      </section>
      <section anchor="timezonesec">
        <name>Time Zones</name>
        <t>Events recur in a particular time zone. When this differs from the user's current time zone, it may unexpectedly cause an occurrence to shift in time for that user due to a daylight savings change in the event's time zone. A maliciously crafted event could attempt to confuse users with such an event to ensure a meeting is missed.</t>
      </section>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>TBD</t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="CLDR" target="http://cldr.unicode.org/" quoteTitle="true" derivedAnchor="CLDR">
          <front>
            <title>Unicode Common Locale Data Repository</title>
            <author/>
            <date/>
          </front>
        </reference>
        <reference anchor="COLORS" target="https://www.w3.org/TR/css-color-3/" quoteTitle="true" derivedAnchor="COLORS">
          <front>
            <title>CSS Color Module Level 3</title>
            <author initials="T" surname="Ãelik" fullname="Tantek Ãelik">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="C" surname="Lilley" fullname="Chris Lilley">
              <organization showOnFrontPage="true"/>
            </author>
            <author initials="L" surname="Baron" fullname="L. David Baron">
              <organization showOnFrontPage="true"/>
            </author>
            <date month="June" year="2018"/>
          </front>
          <refcontent>W3C Recommendation</refcontent>
        </reference>
        <reference anchor="TZDB" target="https://www.iana.org/time-zones" quoteTitle="true" derivedAnchor="TZDB">
          <front>
            <title>Time Zone Database</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2392.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2397.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3339.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4122.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4589.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5322.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5545.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5546.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5646.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5870.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6047.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6838.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6901.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7493.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7529.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7808.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="ISO.9070.1991" target="https://www.iso.org/standard/16645.html" quoteTitle="true" derivedAnchor="ISO.9070.1991">
          <front>
            <title>Information technology -- SGML support facilities -- Registration procedures for public text owner identifiers</title>
            <author>
              <organization showOnFrontPage="true">ISO/IEC</organization>
            </author>
            <date month="April" year="1991"/>
          </front>
          <seriesInfo name="ISO/IEC" value="9070:1991"/>
          <refcontent>Edition 2</refcontent>
        </reference>
        <reference anchor="LINKRELS" target="https://www.iana.org/assignments/link-relations" quoteTitle="true" derivedAnchor="LINKRELS">
          <front>
            <title>Link Relations: Link Relation Types</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
          </front>
        </reference>
        <reference anchor="LOCATIONTYPES" target="https://www.iana.org/assignments/location-type-registry" quoteTitle="true" derivedAnchor="LOCATIONTYPES">
          <front>
            <title>Location Types Registry</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
          </front>
        </reference>
        <reference anchor="MEDIATYPES" target="https://www.iana.org/assignments/media-types" quoteTitle="true" derivedAnchor="MEDIATYPES">
          <front>
            <title>Media Types</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
          </front>
        </reference>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6376.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7265.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7986.xml"/>
      </references>
    </references>
    <section anchor="acknowledgments" numbered="false">
      <name>Acknowledgments</name>
      <t>The authors would like to thank the members of CalConnect for their valuable contributions. This specification originated from the work of the API technical committee of CalConnect: The Calendaring and Scheduling Consortium.</t>
    </section>
  </back>
</rfc>
